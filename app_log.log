__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:01:05
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:01:06
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:01:06
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:01:06
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:01:06
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:01:06
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:01:06
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:01:06
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:01:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:07
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:07
__main__.py main() INFO: Continuing... 05.30.24 23:01:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:08
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:08
__main__.py main() INFO: Continuing... 05.30.24 23:01:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:09
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:09
__main__.py main() INFO: Continuing... 05.30.24 23:01:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:10
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:10
__main__.py main() INFO: Continuing... 05.30.24 23:01:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:11
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:11
__main__.py main() INFO: Continuing... 05.30.24 23:01:11
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:11
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:13
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:13
__main__.py main() INFO: Continuing... 05.30.24 23:01:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:13
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:14
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:14
__main__.py main() INFO: Continuing... 05.30.24 23:01:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:15
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:15
__main__.py main() INFO: Continuing... 05.30.24 23:01:15
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:15
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:16
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:16
__main__.py main() INFO: Continuing... 05.30.24 23:01:16
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:16
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:17
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:17
__main__.py main() INFO: Continuing... 05.30.24 23:01:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:17
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:18
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:18
__main__.py main() INFO: Continuing... 05.30.24 23:01:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:19
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:19
__main__.py main() INFO: Continuing... 05.30.24 23:01:19
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:19
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:20
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:20
__main__.py main() INFO: Continuing... 05.30.24 23:01:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:21
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:21
__main__.py main() INFO: Continuing... 05.30.24 23:01:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:22
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:22
__main__.py main() INFO: Continuing... 05.30.24 23:01:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:01:51
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:01:51
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:01:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:01:51
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:01:51
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:01:51
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:01:51
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:01:51
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:01:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:52
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:52
__main__.py main() INFO: Continuing... 05.30.24 23:01:52
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:52
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:54
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:54
__main__.py main() INFO: Continuing... 05.30.24 23:01:54
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:54
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:55
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:55
__main__.py main() INFO: Continuing... 05.30.24 23:01:55
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:55
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:56
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:56
__main__.py main() INFO: Continuing... 05.30.24 23:01:56
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:56
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:57
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:57
__main__.py main() INFO: Continuing... 05.30.24 23:01:57
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:58
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:58
__main__.py main() INFO: Continuing... 05.30.24 23:01:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:01:59
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:01:59
__main__.py main() INFO: Continuing... 05.30.24 23:01:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:01:59
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:00
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:00
__main__.py main() INFO: Continuing... 05.30.24 23:02:00
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:02:00
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:01
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:01
__main__.py main() INFO: Continuing... 05.30.24 23:02:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:02:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:02
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:02
__main__.py main() INFO: Continuing... 05.30.24 23:02:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:02:02
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:03
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:03
__main__.py main() INFO: Continuing... 05.30.24 23:02:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:02:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:04
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:04
__main__.py main() INFO: Continuing... 05.30.24 23:02:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:02:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:06
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:06
__main__.py main() INFO: Continuing... 05.30.24 23:02:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:02:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:07
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:07
__main__.py main() INFO: Continuing... 05.30.24 23:02:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:02:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:02:08
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:02:08
__main__.py main() INFO: Continuing... 05.30.24 23:02:08
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:03:01
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:03:01
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:03:01
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:03:01
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:03:01
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:03:02
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:03:02
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:03:02
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:03:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:02
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:03
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:03
__main__.py main() INFO: Continuing... 05.30.24 23:03:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:04
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:04
__main__.py main() INFO: Continuing... 05.30.24 23:03:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:05
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:05
__main__.py main() INFO: Continuing... 05.30.24 23:03:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:06
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:06
__main__.py main() INFO: Continuing... 05.30.24 23:03:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:07
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:07
__main__.py main() INFO: Continuing... 05.30.24 23:03:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:08
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:08
__main__.py main() INFO: Continuing... 05.30.24 23:03:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:10
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:10
__main__.py main() INFO: Continuing... 05.30.24 23:03:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:11
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:11
__main__.py main() INFO: Continuing... 05.30.24 23:03:11
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:11
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:12
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:12
__main__.py main() INFO: Continuing... 05.30.24 23:03:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:13
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:13
__main__.py main() INFO: Continuing... 05.30.24 23:03:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:13
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:14
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:14
__main__.py main() INFO: Continuing... 05.30.24 23:03:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:15
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:15
__main__.py main() INFO: Continuing... 05.30.24 23:03:15
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:15
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:16
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:16
__main__.py main() INFO: Continuing... 05.30.24 23:03:16
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:16
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:17
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:17
__main__.py main() INFO: Continuing... 05.30.24 23:03:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:03:17
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:03:18
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:03:18
__main__.py main() INFO: Continuing... 05.30.24 23:03:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:04:17
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:04:18
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:04:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:04:18
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:04:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:04:18
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:04:18
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:04:18
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:04:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:19
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:19
__main__.py main() INFO: Continuing... 05.30.24 23:04:19
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:19
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:20
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:20
__main__.py main() INFO: Continuing... 05.30.24 23:04:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:21
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:21
__main__.py main() INFO: Continuing... 05.30.24 23:04:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:22
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:22
__main__.py main() INFO: Continuing... 05.30.24 23:04:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:23
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:23
__main__.py main() INFO: Continuing... 05.30.24 23:04:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:24
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:24
__main__.py main() INFO: Continuing... 05.30.24 23:04:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:26
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:26
__main__.py main() INFO: Continuing... 05.30.24 23:04:26
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:26
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:27
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:27
__main__.py main() INFO: Continuing... 05.30.24 23:04:27
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:27
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:28
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:28
__main__.py main() INFO: Continuing... 05.30.24 23:04:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:29
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:29
__main__.py main() INFO: Continuing... 05.30.24 23:04:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:04:30
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:04:30
__main__.py main() INFO: Continuing... 05.30.24 23:04:30
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:04:30
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:05:24
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:05:24
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:05:24
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:05:24
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:05:24
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:05:24
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:05:24
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:05:24
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:05:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:05:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:05:25
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 23:05:25
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.30.24 23:05:26
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.30.24 23:05:33
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 23:05:33
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.30.24 23:05:33
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.30.24 23:05:33
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 23:05:33
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.30.24 23:05:33
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.30.24 23:05:33
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.30.24 23:05:33
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.30.24 23:05:33
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.30.24 23:05:33
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.30.24 23:05:33
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.30.24 23:05:33
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.30.24 23:05:33
__main__.py configure_dates() INFO: Use date checked. 05.30.24 23:05:34
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.30.24 23:05:34
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.30.24 23:05:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:05:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:05:35
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 23:05:35
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.30.24 23:05:35
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.30.24 23:05:43
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 23:05:43
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 23:05:43
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.30.24 23:05:44
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 23:05:44
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.30.24 23:05:44
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.30.24 23:05:44
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.30.24 23:05:44
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.30.24 23:05:44
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.30.24 23:05:44
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.30.24 23:05:44
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.30.24 23:05:44
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.30.24 23:05:44
__main__.py configure_dates() INFO: Use date checked. 05.30.24 23:05:44
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.30.24 23:05:44
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.30.24 23:05:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:05:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:05:46
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 23:05:46
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 23:05:46
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.30.24 23:05:55
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 23:05:55
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.30.24 23:05:55
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.30.24 23:05:56
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 23:05:56
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.30.24 23:05:56
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.30.24 23:05:56
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.30.24 23:05:56
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.30.24 23:05:56
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.30.24 23:05:56
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.30.24 23:05:56
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.30.24 23:05:56
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.30.24 23:05:56
__main__.py configure_dates() INFO: Use date checked. 05.30.24 23:05:56
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.30.24 23:05:56
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.30.24 23:05:56
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:05:56
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:05:57
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 23:05:57
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 23:05:58
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 23:06:00
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 23:06:00
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.30.24 23:06:00
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.30.24 23:06:00
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 23:06:00
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.30.24 23:06:00
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.30.24 23:06:00
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.30.24 23:06:00
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.30.24 23:06:00
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.30.24 23:06:01
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.30.24 23:06:01
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.30.24 23:06:01
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.30.24 23:06:01
__main__.py configure_dates() INFO: Use date checked. 05.30.24 23:06:01
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.30.24 23:06:01
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.30.24 23:06:01
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.30.24 23:06:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:02
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:02
__main__.py main() INFO: Continuing... 05.30.24 23:06:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:02
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:03
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:03
__main__.py main() INFO: Continuing... 05.30.24 23:06:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:04
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:04
__main__.py main() INFO: Continuing... 05.30.24 23:06:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:05
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:05
__main__.py main() INFO: Continuing... 05.30.24 23:06:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:06
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:06
__main__.py main() INFO: Continuing... 05.30.24 23:06:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:07
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:07
__main__.py main() INFO: Continuing... 05.30.24 23:06:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:08
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:08
__main__.py main() INFO: Continuing... 05.30.24 23:06:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:10
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:10
__main__.py main() INFO: Continuing... 05.30.24 23:06:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:11
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:11
__main__.py main() INFO: Continuing... 05.30.24 23:06:11
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:11
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:12
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:12
__main__.py main() INFO: Continuing... 05.30.24 23:06:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:06:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:06:13
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.30.24 23:06:13
__main__.py main() INFO: Continuing... 05.30.24 23:06:13
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:10:32
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:10:32
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:10:32
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:10:32
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:10:32
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:10:32
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:10:32
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:10:32
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:10:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:10:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:10:33
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:10:33
__main__.py main() INFO: Continuing... 05.30.24 23:10:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:10:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:10:34
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:10:34
__main__.py main() INFO: Continuing... 05.30.24 23:10:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:10:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:10:36
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'Properties' 05.30.24 23:10:36
__main__.py main() INFO: Continuing... 05.30.24 23:10:36
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:10:36
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:12:59
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:12:59
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:12:59
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:12:59
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:12:59
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:12:59
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:13:00
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:13:00
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:13:00
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:13:00
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:13:01
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:14:17
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:14:18
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:14:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:14:18
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:14:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:14:18
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:14:18
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:14:18
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:14:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:14:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:14:19
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.30.24 23:14:44
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.30.24 23:14:44
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: Neither GUI element (wrapper) nor wrapper method 'child_window' were found (typo?) 05.30.24 23:14:44
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:15:20
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:15:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:15:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:15:20
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:15:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:15:21
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:15:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:15:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:15:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:15:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:15:22
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.30.24 23:15:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.30.24 23:15:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:15:35
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:15:36
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:15:36
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:15:36
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:15:36
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:15:36
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:15:36
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:15:36
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:15:36
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:15:36
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:15:37
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.30.24 23:15:37
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.30.24 23:15:37
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:26:25
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:26:26
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:26:26
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:26:26
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:26:26
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:26:26
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:26:26
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:26:26
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:26:26
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:26:26
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:26:27
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.30.24 23:26:27
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.30.24 23:26:27
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.30.24 23:27:08
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 23:28:03
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.30.24 23:28:03
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.30.24 23:28:03
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 23:28:03
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 23:28:04
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 23:28:04
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 23:28:04
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 23:28:04
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 23:28:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 23:28:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 23:28:05
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 23:28:05
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.30.24 23:28:05
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.30.24 23:28:12
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.30.24 23:28:12
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.30.24 23:28:12
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.30.24 23:28:47
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 00:16:05
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.31.24 00:16:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.31.24 00:16:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 00:16:05
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 00:16:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 00:16:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 00:16:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 00:16:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 00:16:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 00:16:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 00:16:07
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 00:16:07
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 00:16:07
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 00:16:07
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.31.24 00:16:07
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 00:16:07
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 00:16:19
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.31.24 00:16:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.31.24 00:16:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 00:16:20
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 00:16:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 00:16:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 00:16:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 00:16:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 00:16:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 00:16:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 00:16:21
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 00:16:21
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 00:16:21
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 00:16:21
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.31.24 00:16:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 00:16:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 00:17:28
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.31.24 00:17:29
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.31.24 00:17:29
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 00:17:29
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 00:17:29
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 00:17:29
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 00:17:29
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 00:17:29
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 00:17:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 00:17:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 00:17:30
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 00:17:30
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 00:17:30
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 00:17:30
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.31.24 00:17:31
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 00:17:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 00:18:04
__main__.py is_application_running() INFO: Application is already running with PID: 6760 05.31.24 00:18:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6760. 05.31.24 00:18:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 00:18:05
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 00:18:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 00:18:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 00:18:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 00:18:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 00:18:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 00:18:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 00:18:06
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 00:18:06
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 00:18:06
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 00:18:06
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.31.24 00:18:07
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 00:18:18
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 00:18:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:06:59
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:06:59
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:06:59
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:06:59
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:06:59
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:06:59
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:06:59
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:06:59
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:07:00
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:07:00
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:07:01
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:07:01
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:07:01
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:07:01
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.31.24 10:07:01
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:07:01
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: Neither GUI element (wrapper) nor wrapper method 'child_window' were found (typo?) 05.31.24 10:07:01
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:07:34
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:07:34
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:07:34
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:07:34
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:07:34
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:07:34
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:07:34
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:07:34
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:07:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:07:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:07:35
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:07:35
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:07:36
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:07:36
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.31.24 10:07:36
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:11:10
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: Neither GUI element (wrapper) nor wrapper method 'child_window' were found (typo?) 05.31.24 10:11:10
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:17:30
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:17:31
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:17:31
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:17:31
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:17:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:17:31
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:17:31
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:17:31
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:17:31
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:17:31
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:17:32
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:17:32
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:17:32
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:17:32
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:17:32
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:17:32
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 10:17:32
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: bad escape \L at position 4 05.31.24 10:17:32
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: bad escape \L at position 4 05.31.24 10:17:40
__main__.py main() INFO: Continuing... 05.31.24 10:17:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:17:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:17:41
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:17:41
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 10:17:42
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 05.31.24 10:17:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:17:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:17:43
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:17:43
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 10:17:43
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 05.31.24 10:17:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:17:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:17:44
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:17:44
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 10:17:45
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 05.31.24 10:17:45
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:17:45
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:17:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:17:57
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:17:57
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:17:57
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:17:57
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:17:57
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:17:57
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:17:57
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:17:57
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:17:57
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:17:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:17:58
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:17:58
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:17:58
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:17:58
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:17:58
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:17:59
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 10:17:59
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: bad escape \L at position 4 05.31.24 10:17:59
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:19:01
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:19:22
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:19:23
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:19:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:19:23
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:19:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:19:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:19:23
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:19:23
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:19:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:19:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:19:24
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:19:24
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:19:24
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:19:24
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:19:24
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:19:24
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 10:19:24
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:19:24
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:19:24
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 10:19:24
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:19:26
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 10:19:26
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 10:19:27
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 10:19:27
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 10:19:27
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 10:19:27
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 10:19:27
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:19:27
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 10:19:27
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 10:19:27
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:19:27
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 10:19:27
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 10:19:27
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:19:27
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 10:19:27
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 10:19:27
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:19:27
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:19:27
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:19:27
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:19:27
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:19:27
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:19:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:19:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:19:29
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:19:29
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 10:19:29
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 10:19:37
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:19:37
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:19:38
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: hidden divergence & regular divergence\double tf hid reg div with ema.ex4 05.31.24 10:19:38
__main__.py ea_base_name() INFO: Converted 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' to 'double tf hid reg div with ema' 05.31.24 10:19:38
__main__.py ea_base_name() INFO: Converted 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' to 'double tf hid reg div with ema' 05.31.24 10:19:38
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'double tf hid reg div with ema' is now in focus 05.31.24 10:19:38
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:19:40
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'NoneType' object has no attribute 'split' 05.31.24 10:19:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:20:02
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:20:03
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:20:03
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:20:03
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:20:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:20:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:20:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:20:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:20:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:20:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:20:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:20:04
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:20:04
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:20:05
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:20:05
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:20:05
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 10:20:05
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:20:05
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:20:05
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 10:20:05
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:20:07
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 10:20:07
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 10:20:07
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 10:20:07
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 10:20:07
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 10:20:07
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 10:20:07
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:20:07
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 10:20:07
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.31.24 10:20:07
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:20:07
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 10:20:07
__main__.py choose_period() INFO: M1 has already been selected. 05.31.24 10:20:07
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:20:07
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 10:20:07
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 10:20:07
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:20:07
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:20:07
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:20:07
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:20:07
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:20:07
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:20:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:20:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:20:09
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:20:09
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 10:20:09
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 10:20:17
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:20:17
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:20:18
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: hidden divergence & regular divergence\double tf hid reg div with ema.ex4 05.31.24 10:20:18
__main__.py ea_base_name() INFO: Converted 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' to 'double tf hid reg div with ema' 05.31.24 10:20:18
__main__.py ea_base_name() INFO: Converted 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' to 'double tf hid reg div with ema' 05.31.24 10:20:18
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'double tf hid reg div with ema' is now in focus 05.31.24 10:20:18
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:20:20
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'NoneType' object has no attribute 'split' 05.31.24 10:20:20
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:25:39
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:25:39
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:25:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:25:39
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:25:39
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:25:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:25:39
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:25:39
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:25:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:25:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:25:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:25:40
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:25:40
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:25:41
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:25:41
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:25:42
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 10:25:42
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:25:42
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:25:42
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 10:25:42
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:25:44
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 10:25:44
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 10:25:44
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 10:25:44
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 10:25:44
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 10:25:44
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 10:25:44
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:25:44
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 10:25:44
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.31.24 10:25:44
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:25:44
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 10:25:44
__main__.py choose_period() INFO: M1 has already been selected. 05.31.24 10:25:44
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:25:44
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 10:25:44
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 10:25:44
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:25:44
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:25:44
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:25:44
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:25:44
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:25:44
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:25:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:25:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:25:45
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:25:45
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 10:25:45
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 10:25:54
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'NoneType' object has no attribute 'strip' 05.31.24 10:25:54
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:33:50
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:33:51
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:33:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:33:51
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:33:51
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:33:51
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:33:51
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:33:51
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:33:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:33:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:33:52
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:33:52
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:33:52
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:33:53
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:33:53
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:33:53
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 10:33:53
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:33:53
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:33:53
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 10:33:53
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:33:55
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 10:33:55
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 10:33:55
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 10:33:55
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 10:33:55
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 10:33:55
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 10:33:55
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:33:55
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 10:33:55
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.31.24 10:33:55
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:33:55
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 10:33:56
__main__.py choose_period() INFO: M1 has already been selected. 05.31.24 10:33:56
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:33:56
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 10:33:56
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 10:33:56
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:33:56
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:33:56
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:33:56
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:33:56
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:33:56
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:33:56
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:33:56
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:33:57
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:33:57
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 10:33:57
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 10:34:05
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'NoneType' object has no attribute 'strip' 05.31.24 10:34:05
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 10:35:08
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 10:35:08
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 10:35:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 10:35:08
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 10:35:08
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 10:35:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 10:35:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 10:35:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 10:35:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:35:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:35:10
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:35:10
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 10:35:10
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 10:35:10
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:35:10
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:35:11
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 10:35:11
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:35:11
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 10:35:11
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 10:35:11
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:35:13
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 10:35:13
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 10:35:13
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 10:35:13
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 10:35:13
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 10:35:13
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 10:35:13
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:35:13
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 10:35:13
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.31.24 10:35:13
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:35:13
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 10:35:13
__main__.py choose_period() INFO: M1 has already been selected. 05.31.24 10:35:13
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:35:13
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 10:35:13
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 10:35:13
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:35:13
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:35:13
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:35:13
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:35:13
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:35:13
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:35:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:35:13
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:35:14
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:35:14
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 10:35:14
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 10:35:23
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 10:35:23
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:35:23
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 10:35:23
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 10:35:23
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:35:23
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 10:35:23
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 10:35:24
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:35:24
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 10:35:24
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 10:35:24
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:35:24
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:35:24
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:35:24
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:35:24
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:35:24
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:35:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:35:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:35:25
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:35:25
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 10:35:25
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 10:35:35
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 10:35:35
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 10:35:35
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: Fib retracement\ao_swing_fib_ret_bo.ex4 05.31.24 10:35:35
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 10:35:35
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 10:35:36
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'ao_swing_fib_ret_bo' is now in focus 05.31.24 10:35:36
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 10:35:38
__main__.py configure_expert_properties() INFO: Setting property 'RSI Overbought Level' to '75' 05.31.24 10:35:38
__main__.py configure_expert_properties() INFO: Setting property 'Allow Martingale' to 'false' 05.31.24 10:35:38
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lotsize' to '0.02' 05.31.24 10:35:38
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 10:35:38
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 10:35:38
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:35:38
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 10:35:38
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 10:35:38
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:35:38
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 10:35:38
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 10:35:38
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:35:38
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 10:35:39
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 10:35:39
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:35:39
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:35:39
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:35:39
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:35:39
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:35:39
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:35:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:35:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:35:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 10:35:40
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 10:35:40
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 10:35:42
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 10:35:42
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 10:35:42
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 10:35:42
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 10:35:43
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 10:35:43
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 10:35:43
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 10:35:43
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 10:35:43
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 10:35:43
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 10:35:43
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 10:35:43
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 10:35:43
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 10:35:43
__main__.py configure_dates() INFO: Use date checked. 05.31.24 10:35:43
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 10:35:43
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 10:35:43
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 10:35:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:35:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:35:44
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.31.24 10:50:00
__main__.py main() INFO: Continuing... 05.31.24 10:50:00
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:50:00
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:50:01
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.31.24 10:50:08
__main__.py main() INFO: Continuing... 05.31.24 10:50:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:50:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:50:09
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.31.24 10:50:10
__main__.py main() INFO: Continuing... 05.31.24 10:50:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:50:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:50:11
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.31.24 10:50:12
__main__.py main() INFO: Continuing... 05.31.24 10:50:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:50:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:50:13
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: 'NoneType' object has no attribute 'strip' 05.31.24 10:50:13
__main__.py main() INFO: Continuing... 05.31.24 10:50:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 10:50:13
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 10:50:15
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:01:57
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:01:57
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:01:57
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:01:57
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:01:57
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:01:57
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:01:57
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:01:57
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:01:57
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:01:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:01:59
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:01:59
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:01:59
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:02:06
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 11:02:06
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:02:06
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: LC\LC Netting.ex4 05.31.24 11:02:06
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:02:06
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:02:06
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:02:06
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 11:02:08
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 11:02:08
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 11:02:08
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 11:02:08
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 11:02:08
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 11:02:08
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 11:02:09
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 11:02:09
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 11:02:09
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 11:02:09
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 11:02:09
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 11:02:09
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 11:02:09
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 11:02:09
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 11:02:09
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 11:02:09
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 11:02:09
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 11:02:09
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 11:02:09
__main__.py configure_dates() INFO: Use date checked. 05.31.24 11:02:09
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 11:02:09
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 11:02:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:02:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:02:11
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:02:11
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 11:02:11
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 11:02:19
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 11:02:19
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 11:02:19
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 11:02:19
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 11:02:20
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 11:02:20
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 11:02:20
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 11:02:20
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 11:02:20
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 11:02:20
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 11:02:20
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 11:02:20
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 11:02:20
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 11:02:20
__main__.py configure_dates() INFO: Use date checked. 05.31.24 11:02:20
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 11:02:20
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 11:02:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:02:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:02:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:02:22
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 11:02:22
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 11:02:31
__main__.py configure_expert_properties() INFO: Attempting to click on 'Expert properties' button 05.31.24 11:02:31
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:02:32
__main__.py configure_expert_properties() INFO: Waiting for the Expert properties window to open for EA: Fib retracement\ao_swing_fib_ret_bo.ex4 05.31.24 11:02:32
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 11:02:32
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 11:02:32
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'ao_swing_fib_ret_bo' is now in focus 05.31.24 11:02:32
__main__.py configure_expert_properties() INFO: Navigated to properties input section 05.31.24 11:02:34
__main__.py configure_expert_properties() INFO: Setting property 'RSI Overbought Level' to '75' 05.31.24 11:02:34
__main__.py configure_expert_properties() INFO: Setting property 'Allow Martingale' to 'false' 05.31.24 11:02:34
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lotsize' to '0.02' 05.31.24 11:02:34
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 11:02:34
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 11:02:34
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 11:02:34
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 11:02:34
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 11:02:34
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 11:02:34
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 11:02:34
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 11:02:35
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 11:02:35
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 11:02:35
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 11:02:35
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 11:02:35
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 11:02:35
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 11:02:35
__main__.py configure_dates() INFO: Use date checked. 05.31.24 11:02:35
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 11:02:35
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 11:02:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:02:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:02:36
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:02:36
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 11:02:36
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 11:02:38
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 11:02:38
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 11:02:38
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 11:02:38
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 11:02:39
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 11:02:39
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 11:02:39
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 11:02:39
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 11:02:39
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 11:02:39
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 11:02:40
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 11:02:40
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 11:02:40
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 11:02:40
__main__.py configure_dates() INFO: Use date checked. 05.31.24 11:02:40
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 11:02:40
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 11:02:40
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 11:02:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:10:48
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:10:48
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:10:48
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:10:48
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:10:48
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:10:48
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:10:48
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:10:48
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:10:48
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:10:48
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:10:49
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:10:49
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:10:49
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:10:56
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:10:57
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:10:57
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:10:57
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:10:57
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:14:42
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:14:42
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:14:42
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:14:42
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:14:42
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:14:43
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:14:43
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:14:43
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:14:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:14:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:14:44
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:14:44
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:14:44
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:14:44
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:14:45
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:14:45
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:14:45
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:14:45
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:23:57
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:23:57
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:23:57
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:23:57
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:23:57
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:23:57
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:23:57
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:23:57
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:23:57
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:23:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:23:58
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:23:58
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:23:58
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:23:58
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:23:59
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:23:59
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:23:59
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:23:59
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:24:43
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:24:43
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:24:43
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:24:43
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:24:43
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:24:44
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:24:44
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:24:44
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:24:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:24:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:24:45
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:24:45
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:24:45
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:24:45
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:24:45
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:24:45
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:24:46
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:24:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:55:20
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:55:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:55:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:55:20
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:55:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:55:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:55:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:55:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:55:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:55:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:55:21
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:55:21
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:55:21
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:55:21
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:55:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:55:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:55:22
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:55:22
__main__.py configure_expert_properties() INFO: Currently on "Testing" tab. Switching to the 'Inputs' tab 05.31.24 11:55:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:55:54
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:55:54
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:55:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:55:54
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:55:54
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:55:54
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:55:54
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:55:54
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:55:54
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:55:54
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:55:56
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:55:56
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:55:56
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:55:56
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:55:56
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:55:56
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:55:56
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:55:56
__main__.py configure_expert_properties() INFO: Currently on "Testing" tab. Switching to the 'Inputs' tab 05.31.24 11:55:56
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:57:58
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:57:58
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:57:58
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:57:58
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:57:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:57:59
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:57:59
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:57:59
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:57:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:57:59
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:58:00
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:58:00
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:58:00
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:58:00
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:58:00
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:58:00
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:58:00
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:58:00
__main__.py configure_expert_properties() INFO: Currently on "Testing" tab. Switching to the 'Inputs' tab 05.31.24 11:58:01
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:58:34
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:58:35
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:58:35
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:58:35
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:58:35
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:58:35
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:58:35
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:58:35
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:58:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:58:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:58:36
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:58:36
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:58:36
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:58:36
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:58:37
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:58:37
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:58:37
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:58:37
__main__.py configure_expert_properties() INFO: Currently on "Optimization" tab. Switching to the 'Inputs' tab 05.31.24 11:58:37
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 11:59:20
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 11:59:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 11:59:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 11:59:20
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 11:59:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 11:59:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 11:59:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 11:59:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 11:59:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 11:59:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 11:59:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 11:59:22
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 11:59:22
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 11:59:22
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 11:59:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:59:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 11:59:22
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 11:59:22
__main__.py configure_expert_properties() INFO: Currently on "Optimization" tab. Switching to the 'Inputs' tab 05.31.24 11:59:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:03:04
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:03:04
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:03:04
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:03:04
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:03:04
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:03:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:03:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:03:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:03:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:03:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:03:06
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:03:06
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:03:06
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:03:06
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:03:07
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:03:07
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Currently on "Optimization" tab. Switching to the 'Inputs' tab 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 12:03:07
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 12:03:07
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 12:03:07
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 12:03:07
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 12:03:07
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 12:03:07
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 12:03:07
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 12:03:08
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 12:03:08
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 12:03:08
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 12:03:08
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 12:03:08
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 12:03:08
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 12:03:08
__main__.py configure_dates() INFO: Use date checked. 05.31.24 12:03:08
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 12:03:08
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 12:03:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:03:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:03:09
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:03:09
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 12:03:09
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 05.31.24 12:03:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:03:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:03:10
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:03:10
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 12:03:11
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 05.31.24 12:03:11
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:03:11
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:03:12
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:03:12
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 12:03:12
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:03:12
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:09:40
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:09:40
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:09:40
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:09:40
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:09:40
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:09:40
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:09:40
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:09:40
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:09:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:09:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:09:41
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:09:41
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:09:42
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:09:42
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:09:42
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Currently on "Optimization" tab. Switching to the 'Inputs' tab 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 12:09:42
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 12:09:42
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 12:09:42
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 12:09:42
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.31.24 12:09:42
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 12:09:42
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 12:09:42
__main__.py choose_period() INFO: M1 has already been selected. 05.31.24 12:09:42
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 12:09:42
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 12:09:42
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 12:09:42
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 12:09:42
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 12:09:42
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 12:09:42
__main__.py configure_dates() INFO: Use date checked. 05.31.24 12:09:42
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 12:09:42
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 12:09:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:09:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:09:44
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:09:44
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 12:09:44
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 05.31.24 12:09:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:09:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:09:45
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:09:45
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 12:09:45
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 05.31.24 12:09:53
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:09:53
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:09:54
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:09:54
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 12:09:54
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:09:54
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:10:21
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:10:21
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:10:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:10:21
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:10:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:10:21
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:10:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:10:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:10:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:10:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:10:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:10:22
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:10:23
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:10:30
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:10:30
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:10:30
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Currently on "Optimization" tab. Switching to the 'Inputs' tab 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 12:10:31
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 12:10:31
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 12:10:31
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 12:10:31
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.31.24 12:10:31
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 12:10:31
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 12:10:31
__main__.py choose_period() INFO: M1 has already been selected. 05.31.24 12:10:31
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 12:10:31
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 12:10:31
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 12:10:31
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 12:10:31
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 12:10:31
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 12:10:31
__main__.py configure_dates() INFO: Use date checked. 05.31.24 12:10:31
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 12:10:31
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 12:10:31
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:10:31
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:10:32
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:10:32
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 12:10:32
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 05.31.24 12:10:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:10:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:10:34
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:10:34
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 12:10:34
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 05.31.24 12:10:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:10:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:10:35
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:10:35
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 12:10:35
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 12:10:36
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:20:34
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:20:34
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:20:34
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:20:34
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:20:34
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:20:34
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:20:34
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:20:34
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:20:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:20:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:20:35
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:20:35
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:20:36
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:20:36
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:20:36
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:20:36
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:20:36
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:20:36
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:25:31
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:25:31
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:25:31
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:25:31
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:25:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:25:32
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:25:32
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:25:32
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:25:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:25:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:25:33
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:25:33
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:25:34
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:25:34
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:25:34
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:25:34
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:25:34
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:25:34
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:25:50
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:25:50
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:25:50
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:25:50
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:25:50
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:25:51
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:25:51
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:25:51
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:25:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:25:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:25:52
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:25:52
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:25:52
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:25:52
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:25:53
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:25:53
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:25:53
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:25:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:49:44
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:49:44
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:49:44
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:49:44
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:49:44
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:49:44
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:49:44
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:49:44
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:49:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:49:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:49:45
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:49:45
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:49:45
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:49:45
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:49:46
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:49:46
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:49:46
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:49:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 12:59:36
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 12:59:37
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 12:59:37
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 12:59:37
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 12:59:37
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 12:59:37
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 12:59:37
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 12:59:37
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 12:59:37
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 12:59:37
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 12:59:38
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 12:59:38
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 12:59:38
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 12:59:38
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 12:59:39
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:59:39
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 12:59:39
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 12:59:39
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 13:17:37
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 13:17:38
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 13:17:38
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 13:17:38
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 13:17:38
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 13:17:38
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 13:17:38
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 13:17:38
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 13:17:38
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 13:17:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 13:17:39
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 13:17:39
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 13:17:39
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 13:17:39
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 13:17:40
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:17:40
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:17:41
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 13:17:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 13:18:42
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 13:18:42
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 13:18:42
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 13:18:42
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 13:18:42
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 13:18:42
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 13:18:42
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 13:18:42
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 13:18:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 13:18:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 13:18:43
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 13:18:43
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 13:18:44
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 13:18:44
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 13:18:44
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:18:44
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:18:44
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 13:18:44
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 13:22:20
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 13:22:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 13:22:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 13:22:20
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 13:22:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 13:22:21
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 13:22:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 13:22:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 13:22:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 13:22:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 13:22:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 13:22:22
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 13:22:22
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 13:22:22
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 13:22:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:22:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:22:23
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 13:22:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 13:56:56
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 13:56:56
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 13:56:56
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 13:56:56
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 13:56:56
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 13:56:56
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 13:56:56
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 13:56:56
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 13:56:57
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 13:56:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 13:56:58
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 13:56:58
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 13:56:58
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 13:56:58
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 13:56:59
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:56:59
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 13:56:59
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 13:56:59
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:22:46
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:22:46
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:22:46
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:22:46
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:22:46
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:22:46
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:22:47
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:22:47
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:22:47
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:22:47
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:22:48
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:22:48
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:22:48
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:22:48
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:22:48
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:22:48
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:22:48
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:22:48
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:23:02
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:23:02
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:23:02
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:23:02
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:23:02
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:23:02
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:23:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:23:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:23:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:23:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:23:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:23:04
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:23:04
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:23:04
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:23:04
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:23:04
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:23:05
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:23:05
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:34:52
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:34:52
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:34:52
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:34:52
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:34:52
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:34:52
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:34:52
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:34:52
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:34:52
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:34:52
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:34:54
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:34:54
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:34:54
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:34:54
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:34:55
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:34:55
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:34:55
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:34:55
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'DialogWrapper' object has no attribute 'print_control_identifiers' 05.31.24 14:34:55
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:39:25
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:39:25
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:39:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:39:25
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:39:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:39:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:39:25
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:39:25
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:39:25
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:39:25
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:39:26
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:39:26
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:39:27
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:39:27
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:39:27
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:39:27
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:39:27
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:39:27
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:41:20
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:41:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:41:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:41:20
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:41:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:41:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:41:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:41:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:41:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:41:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:41:21
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:41:21
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:41:22
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:41:22
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:41:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:41:22
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:41:22
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:41:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:43:24
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:43:24
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:43:24
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:43:24
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:43:24
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:43:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:43:25
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:43:25
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:43:25
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:43:25
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:43:26
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:43:26
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:43:26
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:43:26
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:43:26
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:43:26
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:43:26
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:43:26
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:44:16
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:44:16
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:44:16
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:44:16
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:44:16
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:44:16
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:44:16
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:44:16
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:44:16
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:44:16
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:44:17
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:44:17
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:44:18
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:44:18
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:44:18
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:44:18
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:44:18
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:44:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:48:12
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:48:12
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:48:12
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:48:12
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:48:12
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:48:12
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:48:12
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:48:12
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:48:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:48:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:48:13
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:48:13
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:48:14
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:48:14
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:48:14
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:48:14
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:48:14
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:48:14
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:52:23
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:52:23
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:52:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:52:23
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:52:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:52:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:52:24
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:52:24
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:52:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:52:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:52:25
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:52:25
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:52:25
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:52:25
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:52:25
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:52:25
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:52:26
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:52:26
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 14:52:40
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 14:52:40
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:52:40
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 14:52:40
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.31.24 14:52:40
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:52:40
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 14:52:40
__main__.py choose_period() INFO: M1 has already been selected. 05.31.24 14:52:40
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:52:40
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 14:52:40
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 14:52:40
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:52:40
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:52:40
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:52:40
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:52:40
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:52:40
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:52:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:52:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:52:42
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:52:42
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 14:52:42
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 14:52:50
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 14:52:50
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:52:50
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 14:52:50
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 14:52:51
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:52:51
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 14:52:51
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 14:52:51
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:52:51
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 14:52:51
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 14:52:52
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:52:52
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:52:52
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:52:52
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:52:52
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:52:52
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:52:52
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:52:52
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:52:53
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:52:53
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 14:52:53
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 14:53:03
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:53:03
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 14:53:03
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 14:53:03
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'ao_swing_fib_ret_bo' is now in focus 05.31.24 14:53:03
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 14:53:05
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 14:53:05
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:53:05
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 14:53:06
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 14:53:06
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:53:06
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 14:53:06
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 14:53:06
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:53:06
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 14:53:06
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 14:53:07
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:53:07
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:53:07
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:53:07
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:53:07
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:53:07
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:53:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:53:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:53:08
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:53:08
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 14:53:08
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 14:53:10
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 14:53:10
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:53:10
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 14:53:10
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 14:53:11
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:53:11
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 14:53:11
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 14:53:11
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:53:11
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 14:53:11
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 14:53:11
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:53:11
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:53:11
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:53:11
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:53:11
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:53:11
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 14:53:11
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:53:11
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 14:54:09
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 14:54:09
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 14:54:09
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 14:54:09
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 14:54:09
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 14:54:09
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 14:54:09
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 14:54:09
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 14:54:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:54:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:54:11
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:54:11
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 14:54:11
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 14:54:18
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:54:18
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:54:18
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 14:54:19
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'LC Netting' is now in focus 05.31.24 14:54:19
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 14:54:21
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 14:54:21
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:54:21
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 14:54:21
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 14:54:21
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:54:21
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 14:54:21
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 14:54:22
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:54:22
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 14:54:22
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 14:54:22
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:54:22
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:54:22
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:54:22
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:54:22
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:54:22
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:54:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:54:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:54:23
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:54:23
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 14:54:23
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 14:54:32
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 14:54:32
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:54:32
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 14:54:32
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 14:54:32
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:54:32
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 14:54:32
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 14:54:33
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:54:33
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 14:54:33
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 14:54:33
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:54:33
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:54:33
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:54:33
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:54:33
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:54:33
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:54:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:54:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:54:34
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:54:34
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 14:54:34
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 14:54:44
__main__.py configure_expert_properties() INFO: Clicked on 'Expert properties' button 05.31.24 14:54:44
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 14:54:44
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 14:54:45
__main__.py configure_expert_properties() INFO: Expert properties window for EA 'ao_swing_fib_ret_bo' is now in focus 05.31.24 14:54:45
__main__.py configure_expert_properties() INFO: Navigating to OK button 05.31.24 14:54:47
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 14:54:47
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:54:47
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 14:54:47
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 14:54:47
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:54:47
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 14:54:47
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 14:54:48
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:54:48
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 14:54:48
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 14:54:48
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:54:48
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:54:48
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:54:48
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:54:48
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:54:48
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:54:48
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 14:54:48
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 14:54:49
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 14:54:49
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 14:54:49
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 14:54:51
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 14:54:51
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 14:54:51
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 14:54:51
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 14:54:52
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 14:54:52
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 14:54:52
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 14:54:52
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 14:54:52
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 14:54:52
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 14:54:53
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 14:54:53
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 14:54:53
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 14:54:53
__main__.py configure_dates() INFO: Use date checked. 05.31.24 14:54:53
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 14:54:53
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 14:54:53
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 14:54:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 15:51:38
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 15:51:38
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 15:51:38
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 15:51:38
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 15:51:38
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 15:51:38
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 15:51:38
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 15:51:38
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 15:51:38
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 15:51:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 15:51:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 15:51:40
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 15:51:40
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 15:51:47
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: {'title': 'Modify Expert', 'class_name': 'Button', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - 'Tester', Afx:00070000:b:00010003:00000000:00000000, 394550>, 'backend': 'win32'} 05.31.24 15:51:52
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: {'title': 'Modify Expert', 'class_name': 'Button', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - 'Tester', Afx:00070000:b:00010003:00000000:00000000, 394550>, 'backend': 'win32'} 05.31.24 15:51:52
__main__.py main() INFO: Continuing... 05.31.24 15:51:52
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 15:51:52
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 15:51:53
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 15:51:53
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 15:51:53
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 15:52:02
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 15:52:02
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 15:52:02
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 15:52:02
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 15:52:02
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 15:52:02
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 15:52:02
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 15:52:03
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 15:52:03
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 15:52:03
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 15:52:03
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 15:52:03
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 15:52:03
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 15:52:03
__main__.py configure_dates() INFO: Use date checked. 05.31.24 15:52:03
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 15:52:03
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 15:52:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 15:52:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 15:52:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 15:52:04
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 15:52:04
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 15:52:14
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: {'title': 'Modify Expert', 'class_name': 'Button', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - 'Tester', Afx:00070000:b:00010003:00000000:00000000, 394550>, 'backend': 'win32'} 05.31.24 15:52:19
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: {'title': 'Modify Expert', 'class_name': 'Button', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - 'Tester', Afx:00070000:b:00010003:00000000:00000000, 394550>, 'backend': 'win32'} 05.31.24 15:52:19
__main__.py main() INFO: Continuing... 05.31.24 15:52:19
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 15:52:19
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 15:52:20
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 15:52:20
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 15:52:20
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 15:52:22
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 15:52:22
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 15:52:22
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 15:52:22
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 15:52:23
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 15:52:23
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 15:52:23
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 15:52:23
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 15:52:23
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 15:52:23
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 15:52:23
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 15:52:23
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 15:52:24
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 15:52:24
__main__.py configure_dates() INFO: Use date checked. 05.31.24 15:52:24
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 15:52:24
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 15:52:24
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 15:52:24
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 15:52:55
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 15:52:56
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 15:52:56
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 15:52:56
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 15:52:56
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 15:52:56
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 15:52:56
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 15:52:56
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 15:52:56
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 15:52:56
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 15:52:57
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 15:52:57
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 15:52:57
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 15:53:04
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 15:53:05
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:06:18
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 16:06:18
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 16:06:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 16:06:18
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:06:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:06:18
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.31.24 16:06:23
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.31.24 16:06:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:06:28
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 16:06:28
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 16:06:28
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 16:06:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:06:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:06:30
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:06:30
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 16:06:30
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 16:06:30
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:06:30
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:07:17
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 16:07:17
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 16:07:17
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 16:07:17
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:07:17
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:07:17
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.31.24 16:07:22
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.31.24 16:07:22
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:07:27
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 16:07:27
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 16:07:27
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 16:07:27
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:07:27
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:07:28
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:07:28
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 16:07:29
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 16:07:29
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:07:29
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:07:29
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:08:03
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 16:08:03
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 16:08:03
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 16:08:03
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:08:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:08:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 16:08:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 16:08:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 16:08:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:08:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:08:05
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:08:05
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 16:08:05
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 16:08:05
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:08:05
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:08:05
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:43:27
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 16:43:27
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 16:43:27
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 16:43:27
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:43:27
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:43:27
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 16:43:28
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 16:43:28
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 16:43:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:43:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:43:29
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:43:29
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 16:43:29
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 16:43:29
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:43:29
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:43:29
__main__.py is_application_running() INFO: Application is already running with PID: 15764 05.31.24 16:43:30
__main__.py access_application() INFO: Connecting to the running instance with PID: 15764. 05.31.24 16:43:30
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 16:43:30
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:43:31
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:43:33
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:44:21
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 16:44:22
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 16:44:22
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 16:44:22
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:44:22
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:44:22
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 16:44:22
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 16:44:22
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 16:44:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:44:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:44:23
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:44:23
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 16:44:23
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 16:44:23
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:44:24
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:44:24
__main__.py is_application_running() INFO: Application is already running with PID: 2380 05.31.24 16:44:24
__main__.py access_application() INFO: Connecting to the running instance with PID: 2380. 05.31.24 16:44:24
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 16:44:24
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:44:25
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:44:28
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:44:38
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 16:44:38
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 16:44:39
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:44:39
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 16:44:39
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 16:44:39
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:44:39
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 16:44:39
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 16:44:39
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:44:39
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:44:39
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:44:39
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:44:39
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:44:39
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:44:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:44:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:44:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:44:40
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 16:44:40
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 16:44:49
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 16:44:49
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:44:49
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 16:44:49
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 16:44:49
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:44:49
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 16:44:49
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 16:44:50
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:44:50
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 16:44:50
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 16:44:50
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:44:50
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:44:50
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:44:50
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:44:50
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:44:50
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:44:50
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:44:50
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:44:51
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:44:51
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 16:44:52
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 16:45:01
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:45:02
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:45:02
__main__.py is_application_running() INFO: Application is already running with PID: 16912 05.31.24 16:45:02
__main__.py access_application() INFO: Connecting to the running instance with PID: 16912. 05.31.24 16:45:02
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 16:45:02
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:45:03
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:45:06
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:45:06
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 16:45:06
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 16:45:06
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:45:06
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 16:45:06
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 16:45:06
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:45:06
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 16:45:07
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 16:45:07
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:45:07
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:45:07
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:45:07
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:45:07
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:45:07
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:45:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:45:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:45:08
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:45:08
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 16:45:08
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 16:45:10
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 16:45:10
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:45:10
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 16:45:10
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 16:45:11
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:45:11
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 16:45:11
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 16:45:11
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:45:11
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 16:45:11
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 16:45:11
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:45:11
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:45:11
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:45:11
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:45:12
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:45:12
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 16:45:12
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:45:12
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:48:57
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 16:48:57
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 16:48:57
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 16:48:57
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:48:57
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:48:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 16:48:58
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 16:48:58
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 16:48:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:48:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:48:59
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:48:59
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 16:48:59
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 16:49:06
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:49:07
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:49:07
__main__.py is_application_running() INFO: Application is already running with PID: 17128 05.31.24 16:49:07
__main__.py access_application() INFO: Connecting to the running instance with PID: 17128. 05.31.24 16:49:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 16:49:07
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:49:08
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:49:10
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:49:10
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 16:49:10
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 16:49:11
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:49:11
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 16:49:11
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 16:49:11
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:49:11
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 16:49:11
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 16:49:11
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:49:11
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:49:11
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:49:11
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:49:11
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:49:11
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:49:11
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:49:11
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:49:12
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:49:12
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 16:49:12
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 16:49:21
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 16:49:21
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:49:21
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 16:49:21
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 16:49:21
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:49:22
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 16:49:22
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 16:49:22
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:49:22
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 16:49:22
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 16:49:22
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:49:22
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:49:22
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:49:22
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:49:22
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:49:22
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:49:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:49:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:49:23
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:49:23
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 16:49:24
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 16:49:33
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:49:34
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:49:34
__main__.py is_application_running() INFO: Application is already running with PID: 15600 05.31.24 16:49:34
__main__.py access_application() INFO: Connecting to the running instance with PID: 15600. 05.31.24 16:49:34
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 16:49:34
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:49:35
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:49:37
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:49:37
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 16:49:37
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 16:49:38
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:49:38
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 16:49:38
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 16:49:38
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:49:38
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 16:49:38
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 16:49:38
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:49:38
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:49:38
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:49:38
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:49:39
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:49:39
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:49:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:49:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:49:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:49:40
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 16:49:40
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 16:49:42
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 16:49:42
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:49:42
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 16:49:42
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 16:49:42
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:49:42
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 16:49:42
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 16:49:43
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:49:43
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 16:49:43
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 16:49:43
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:49:43
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:49:43
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:49:43
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:49:43
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:49:43
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 16:49:43
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:49:43
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:51:46
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 16:51:47
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 16:51:47
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 16:51:47
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:51:47
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 16:51:47
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 16:51:47
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 16:51:47
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 16:51:47
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:51:47
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:51:48
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:51:48
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 16:51:48
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 16:51:55
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:51:56
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:51:56
__main__.py is_application_running() INFO: Application is already running with PID: 17288 05.31.24 16:51:56
__main__.py access_application() INFO: Connecting to the running instance with PID: 17288. 05.31.24 16:51:56
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 16:51:56
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:51:57
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:52:00
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:52:00
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 16:52:00
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 16:52:00
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:52:00
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 16:52:00
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 16:52:00
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:52:00
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 16:52:00
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 16:52:00
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:52:00
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:52:00
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:52:00
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:52:00
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:52:00
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:52:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:52:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:52:02
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:52:02
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 16:52:02
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 16:52:10
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 16:52:10
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:52:10
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 16:52:10
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 16:52:11
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:52:11
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 16:52:11
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 16:52:11
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:52:11
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 16:52:11
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 16:52:11
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:52:11
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:52:11
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:52:11
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:52:12
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:52:12
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:52:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:52:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:52:13
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:52:13
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 16:52:13
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 16:52:22
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 16:52:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 16:52:23
__main__.py is_application_running() INFO: Application is already running with PID: 12276 05.31.24 16:52:23
__main__.py access_application() INFO: Connecting to the running instance with PID: 12276. 05.31.24 16:52:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 16:52:23
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 16:52:24
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 16:52:27
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:52:27
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 16:52:27
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 16:52:27
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:52:27
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 16:52:27
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 16:52:27
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:52:27
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 16:52:27
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 16:52:28
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:52:28
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:52:28
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:52:28
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:52:28
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:52:28
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:52:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 16:52:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 16:52:29
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 16:52:29
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 16:52:29
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 16:52:31
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 16:52:31
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 16:52:31
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 16:52:31
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 16:52:32
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 16:52:32
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 16:52:32
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 16:52:32
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 16:52:32
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 16:52:32
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 16:52:32
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 16:52:32
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 16:52:32
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 16:52:32
__main__.py configure_dates() INFO: Use date checked. 05.31.24 16:52:32
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 16:52:32
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 16:52:32
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 16:52:32
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:00:36
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:00:37
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:00:37
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:00:37
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:00:37
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:00:37
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:00:37
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:00:37
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:00:37
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:00:37
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:00:38
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:00:38
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:00:38
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:00:45
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:00:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:00:46
__main__.py is_application_running() INFO: Application is already running with PID: 6812 05.31.24 17:00:46
__main__.py access_application() INFO: Connecting to the running instance with PID: 6812. 05.31.24 17:00:46
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:00:46
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:00:47
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 17:00:49
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:00:49
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 17:00:50
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 17:00:50
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:00:50
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 17:00:50
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 17:00:50
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:00:50
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 17:00:50
__main__.py choose_modelling() INFO: Every tick has already been selected. 05.31.24 17:00:50
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:00:50
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:00:50
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:00:50
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:00:50
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:00:50
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:00:50
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:00:50
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:00:51
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:00:51
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 17:00:52
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 17:01:00
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 17:01:00
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:01:00
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 17:01:00
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 17:01:01
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:01:01
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 17:01:01
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 17:01:01
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:01:01
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 17:01:01
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 17:01:01
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:01:01
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:01:01
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:01:01
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:01:01
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:01:01
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:01:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:01:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:01:03
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:01:03
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 17:01:03
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 17:01:12
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:01:13
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:01:13
__main__.py is_application_running() INFO: Application is already running with PID: 16420 05.31.24 17:01:13
__main__.py access_application() INFO: Connecting to the running instance with PID: 16420. 05.31.24 17:01:13
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:01:13
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:01:14
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 17:01:16
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:01:16
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 17:01:16
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 17:01:17
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:01:17
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 17:01:17
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 17:01:17
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:01:17
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 17:01:17
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 17:01:18
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:01:18
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:01:18
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:01:18
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:01:18
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:01:18
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:01:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:01:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:01:19
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:01:19
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 17:01:19
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 17:01:21
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 17:01:21
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:01:21
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 17:01:21
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 17:01:21
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:01:21
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 17:01:21
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 17:01:22
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:01:22
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 17:01:22
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 17:01:22
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:01:22
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:01:22
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:01:22
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:01:22
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:01:22
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 17:01:22
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:01:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:07:39
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:07:39
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:07:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:07:39
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:07:39
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:07:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:07:39
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:07:39
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:07:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:07:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:07:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:07:40
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:07:41
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:07:48
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:07:48
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:07:48
__main__.py is_application_running() INFO: Application is already running with PID: 388 05.31.24 17:07:48
__main__.py access_application() INFO: Connecting to the running instance with PID: 388. 05.31.24 17:07:48
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:07:48
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:07:49
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:30:04
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:30:04
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:30:04
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:30:04
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:30:04
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:30:04
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:30:04
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:30:04
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:30:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:30:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:30:05
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:30:05
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:30:06
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:30:06
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:30:06
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:30:06
__main__.py is_application_running() INFO: Application is already running with PID: 388 05.31.24 17:30:06
__main__.py access_application() INFO: Connecting to the running instance with PID: 388. 05.31.24 17:30:06
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:30:06
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:30:06
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 17:30:06
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:30:50
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:30:50
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:30:50
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:30:50
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:30:50
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:30:50
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:30:50
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:30:50
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:30:50
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:30:50
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:30:51
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:30:51
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:30:52
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:30:52
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:30:52
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:30:52
__main__.py is_application_running() INFO: Application is already running with PID: 3460 05.31.24 17:30:52
__main__.py access_application() INFO: Connecting to the running instance with PID: 3460. 05.31.24 17:30:52
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:30:52
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:30:53
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 17:30:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:31:21
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:31:21
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:31:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:31:21
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:31:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:31:21
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:31:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:31:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:31:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:31:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:31:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:31:22
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:31:22
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:31:22
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:31:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:31:23
__main__.py is_application_running() INFO: Application is already running with PID: 15496 05.31.24 17:31:23
__main__.py access_application() INFO: Connecting to the running instance with PID: 15496. 05.31.24 17:31:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:31:23
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:31:24
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 17:31:24
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:32:15
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:32:16
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:32:16
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:32:16
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:32:16
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:32:16
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:32:16
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:32:16
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:32:16
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:32:16
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:32:17
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:32:17
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:32:17
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:32:17
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:32:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:32:18
__main__.py is_application_running() INFO: Application is already running with PID: 15496 05.31.24 17:32:18
__main__.py access_application() INFO: Connecting to the running instance with PID: 15496. 05.31.24 17:32:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:32:18
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:32:18
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 17:32:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:33:19
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:33:19
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:33:19
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:33:19
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:33:19
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:33:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:33:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:33:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:33:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:33:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:33:21
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:33:21
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:33:21
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:33:21
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:33:21
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:33:21
__main__.py is_application_running() INFO: Application is already running with PID: 17392 05.31.24 17:33:22
__main__.py access_application() INFO: Connecting to the running instance with PID: 17392. 05.31.24 17:33:22
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:33:22
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:33:23
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 17:33:23
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 17:33:26
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:33:26
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 05.31.24 17:33:26
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.31.24 17:33:26
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:33:26
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 05.31.24 17:33:26
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 05.31.24 17:33:27
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:33:27
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 17:33:27
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 17:33:27
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:33:27
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:33:27
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:33:27
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:33:27
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:33:27
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:33:27
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:33:27
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:33:28
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:33:28
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 17:33:28
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 05.31.24 17:33:37
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 17:33:37
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:33:37
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.31.24 17:33:37
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.31.24 17:33:37
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:33:37
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.31.24 17:33:38
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.31.24 17:33:38
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:33:38
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 05.31.24 17:33:38
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 05.31.24 17:33:38
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:33:38
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:33:38
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:33:38
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:33:38
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:33:38
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:33:38
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:33:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:33:39
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:33:39
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 17:33:40
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.31.24 17:33:49
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:33:50
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:33:50
__main__.py is_application_running() INFO: Application is already running with PID: 16884 05.31.24 17:33:50
__main__.py access_application() INFO: Connecting to the running instance with PID: 16884. 05.31.24 17:33:50
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:33:50
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:33:51
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.31.24 17:33:51
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 05.31.24 17:33:54
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:33:54
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.31.24 17:33:54
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.31.24 17:33:54
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:33:54
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.31.24 17:33:54
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 05.31.24 17:33:54
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:33:54
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 05.31.24 17:33:55
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 05.31.24 17:33:55
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:33:55
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:33:55
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:33:55
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:33:55
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:33:55
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:33:55
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:33:55
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:33:56
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:33:56
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 17:33:56
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.31.24 17:33:58
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 05.31.24 17:33:58
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.31.24 17:33:58
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.31.24 17:33:58
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 05.31.24 17:33:59
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.31.24 17:33:59
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 05.31.24 17:33:59
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 05.31.24 17:33:59
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 05.31.24 17:33:59
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 05.31.24 17:33:59
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 05.31.24 17:33:59
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 05.31.24 17:33:59
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 05.31.24 17:33:59
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 05.31.24 17:33:59
__main__.py configure_dates() INFO: Use date checked. 05.31.24 17:33:59
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 05.31.24 17:33:59
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 05.31.24 17:33:59
__main__.py main() ERROR: Failed to configure the dates. Continuing. 05.31.24 17:33:59
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:33:59
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:33:59
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:33:59
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:33:59
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:34:00
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:34:00
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:34:00
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:34:00
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:34:00
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:34:00
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 17:34:00
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:38:06
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 17:38:07
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 17:38:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 17:38:07
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:38:07
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 17:38:07
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 17:38:07
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 17:38:07
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 17:38:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 17:38:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 17:38:08
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 17:38:08
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 17:38:08
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 17:38:15
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 17:38:16
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 17:38:16
__main__.py is_application_running() INFO: Application is already running with PID: 16200 05.31.24 17:38:16
__main__.py access_application() INFO: Connecting to the running instance with PID: 16200. 05.31.24 17:38:16
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 17:38:16
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 17:38:17
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 17:38:17
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 18:17:34
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 18:17:34
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 18:17:34
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 18:17:34
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 18:17:34
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 18:17:34
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 18:17:35
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 18:17:35
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 18:17:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 18:17:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 18:17:36
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 18:17:36
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 18:17:36
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 18:17:36
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 18:17:36
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 18:17:36
__main__.py is_application_running() INFO: Application is already running with PID: 14116 05.31.24 18:17:37
__main__.py access_application() INFO: Connecting to the running instance with PID: 14116. 05.31.24 18:17:37
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 18:17:37
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 18:17:37
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 18:17:37
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 18:17:37
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 18:17:37
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 18:17:37
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 18:17:37
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 18:40:34
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 18:40:35
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 18:40:35
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 18:40:35
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 18:40:35
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 18:40:35
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 18:40:35
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 18:40:35
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 18:40:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 18:40:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 18:40:36
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 18:40:36
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 18:40:36
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 18:40:37
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 18:40:38
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 18:40:38
__main__.py is_application_running() INFO: Application is already running with PID: 13244 05.31.24 18:40:39
__main__.py access_application() INFO: Connecting to the running instance with PID: 13244. 05.31.24 18:40:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 18:40:39
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 18:40:39
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 18:40:39
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 18:40:40
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 18:40:40
__main__.py configure_expert_properties() INFO: Setting property 'Initial lotsize' to '0.02' 05.31.24 18:40:40
__main__.py configure_expert_properties() INFO: Setting property 'Start Time' to '4' 05.31.24 18:40:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 19:17:20
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 19:17:21
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 19:17:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 19:17:21
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 19:17:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 19:17:21
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 19:17:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 19:17:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 19:17:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 19:17:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 19:17:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 19:17:22
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 19:17:22
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 19:17:22
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 19:17:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 19:17:23
__main__.py is_application_running() INFO: Application is already running with PID: 14920 05.31.24 19:17:23
__main__.py access_application() INFO: Connecting to the running instance with PID: 14920. 05.31.24 19:17:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 19:17:23
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 19:17:24
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 19:17:24
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 19:18:15
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 19:18:16
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 19:18:16
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 19:18:16
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 19:18:16
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 19:18:16
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 19:18:16
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 19:18:16
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 19:18:16
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 19:18:16
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 19:18:17
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 19:18:17
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 19:18:17
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 19:18:17
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 19:18:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 19:18:18
__main__.py is_application_running() INFO: Application is already running with PID: 14920 05.31.24 19:18:18
__main__.py access_application() INFO: Connecting to the running instance with PID: 14920. 05.31.24 19:18:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 19:18:18
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 19:18:18
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 19:18:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 19:21:07
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 19:21:07
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 19:21:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 19:21:07
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 19:21:07
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 19:21:07
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 19:21:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 19:21:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 19:21:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 19:21:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 19:21:09
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 19:21:09
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 19:21:09
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 19:21:09
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 19:21:10
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 19:21:10
__main__.py is_application_running() INFO: Application is already running with PID: 14920 05.31.24 19:21:10
__main__.py access_application() INFO: Connecting to the running instance with PID: 14920. 05.31.24 19:21:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 19:21:10
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 19:21:10
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 19:21:10
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 22:25:23
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 22:25:23
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 22:25:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 22:25:23
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 22:25:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 22:25:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 22:25:23
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 22:25:23
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 22:25:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:25:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:25:25
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:25:25
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 22:25:25
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 22:25:25
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 22:25:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 22:25:25
__main__.py is_application_running() INFO: Application is already running with PID: 5828 05.31.24 22:25:26
__main__.py access_application() INFO: Connecting to the running instance with PID: 5828. 05.31.24 22:25:26
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 22:25:26
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 22:25:26
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 22:25:26
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 22:25:27
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 22:25:27
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 05.31.24 22:25:27
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: invalid group reference 10 at position 1 05.31.24 22:25:27
__main__.py main() INFO: Continuing... 05.31.24 22:25:27
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:25:27
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:25:28
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:25:28
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 22:25:28
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 05.31.24 22:25:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:25:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:25:29
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:25:29
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 22:25:30
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 05.31.24 22:25:30
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:25:30
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:25:31
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:25:31
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 22:25:31
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:25:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 22:39:54
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 22:39:54
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 22:39:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 22:39:54
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 22:39:54
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 22:39:55
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 22:39:55
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 22:39:55
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 22:39:55
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:39:55
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:39:56
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:39:56
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 22:39:56
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 22:39:56
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 22:39:57
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 22:39:57
__main__.py is_application_running() INFO: Application is already running with PID: 16056 05.31.24 22:39:57
__main__.py access_application() INFO: Connecting to the running instance with PID: 16056. 05.31.24 22:39:57
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 22:39:57
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 22:39:58
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 22:39:58
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut off' to 'False' 05.31.24 22:39:58
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting' to 'False' 05.31.24 22:39:58
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 05.31.24 22:39:58
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: invalid group reference 10 at position 1 05.31.24 22:39:58
__main__.py main() INFO: Continuing... 05.31.24 22:39:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:39:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:39:59
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:39:59
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 05.31.24 22:39:59
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 05.31.24 22:40:00
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:40:00
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:40:01
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:40:01
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.31.24 22:40:01
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 05.31.24 22:40:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:40:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:40:02
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:40:02
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.31.24 22:40:02
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py main() INFO: Skipping row with missing 'Expert' value. 05.31.24 22:40:03
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 22:45:31
__main__.py is_application_running() INFO: Application is already running with PID: 6848 05.31.24 22:45:32
__main__.py access_application() INFO: Connecting to the running instance with PID: 6848. 05.31.24 22:45:32
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.31.24 22:45:32
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 22:45:32
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.31.24 22:45:32
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.31.24 22:45:32
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.31.24 22:45:32
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.31.24 22:45:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.31.24 22:45:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.31.24 22:45:33
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.31.24 22:45:33
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 05.31.24 22:45:33
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 05.31.24 22:45:33
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 05.31.24 22:45:34
__main__.py is_application_running() INFO: Checking if the application is already running. 05.31.24 22:45:34
__main__.py is_application_running() INFO: Application is already running with PID: 14528 05.31.24 22:45:34
__main__.py access_application() INFO: Connecting to the running instance with PID: 14528. 05.31.24 22:45:34
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 05.31.24 22:45:34
__main__.py wait_for_window() INFO: Window found and ready. 05.31.24 22:45:35
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 05.31.24 22:45:35
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 05.31.24 22:45:35
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 05.31.24 22:45:35
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:08:28
__main__.py is_application_running() INFO: Application is not running. 06.01.24 10:08:28
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 10:08:28
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 10:08:29
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:08:46
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 10:08:46
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 10:08:46
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 10:08:46
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 10:08:46
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 10:08:46
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 10:08:47
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 10:08:47
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 10:08:47
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 10:08:47
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 10:08:48
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:08:48
__main__.py is_application_running() INFO: Application is not running. 06.01.24 10:08:48
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\metaeditor.exe. 06.01.24 10:08:48
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 10:08:48
__main__.py wait_for_window() ERROR: Exception occurred while waiting for the window: timed out 06.01.24 10:09:09
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:09:33
__main__.py is_application_running() INFO: Application is not running. 06.01.24 10:09:34
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 10:09:34
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 10:09:34
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:09:51
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 10:09:51
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 10:09:51
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 10:09:51
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 10:09:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 10:09:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 10:09:52
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 10:09:52
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 10:09:52
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 10:09:52
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 10:09:53
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:09:53
__main__.py is_application_running() INFO: Application is not running. 06.01.24 10:09:53
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\metaeditor.exe. 06.01.24 10:09:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 10:09:53
__main__.py wait_for_window() ERROR: Exception occurred while waiting for the window: timed out 06.01.24 10:10:13
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:15:13
__main__.py is_application_running() INFO: Application is already running with PID: 15868 06.01.24 10:15:13
__main__.py access_application() INFO: Connecting to the running instance with PID: 15868. 06.01.24 10:15:13
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 10:15:13
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:15:13
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 10:15:14
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 10:15:14
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 10:15:14
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 10:15:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 10:15:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 10:15:15
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 10:15:15
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 10:15:15
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 10:15:15
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 10:15:16
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:15:16
__main__.py is_application_running() INFO: Application is already running with PID: 14308 06.01.24 10:15:16
__main__.py access_application() INFO: Connecting to the running instance with PID: 14308. 06.01.24 10:15:16
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 10:15:16
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:15:16
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 10:15:17
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 10:15:17
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 10:15:17
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:17:48
__main__.py is_application_running() INFO: Application is already running with PID: 15868 06.01.24 10:17:49
__main__.py access_application() INFO: Connecting to the running instance with PID: 15868. 06.01.24 10:17:49
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 10:17:49
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:17:49
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 10:17:49
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 10:17:49
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 10:17:49
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 10:17:49
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 10:17:49
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 10:17:50
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 10:17:50
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 10:17:50
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 10:17:50
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 10:17:51
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:17:51
__main__.py is_application_running() INFO: Application is already running with PID: 1076 06.01.24 10:17:51
__main__.py access_application() INFO: Connecting to the running instance with PID: 1076. 06.01.24 10:17:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 10:17:51
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:17:52
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 10:17:52
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 10:17:52
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 10:17:52
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:22:54
__main__.py is_application_running() INFO: Application is already running with PID: 15868 06.01.24 10:22:54
__main__.py access_application() INFO: Connecting to the running instance with PID: 15868. 06.01.24 10:22:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 10:22:54
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:22:54
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 10:22:54
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 10:22:54
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 10:22:54
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 10:22:54
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 10:22:54
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 10:22:55
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 10:22:55
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 10:22:56
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 10:22:56
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 10:22:56
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:22:56
__main__.py is_application_running() INFO: Application is already running with PID: 10980 06.01.24 10:22:56
__main__.py access_application() INFO: Connecting to the running instance with PID: 10980. 06.01.24 10:22:56
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 10:22:56
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:22:57
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 10:22:57
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 10:22:58
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 10:22:58
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:23:34
__main__.py is_application_running() INFO: Application is not running. 06.01.24 10:23:35
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 10:23:35
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 10:23:35
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:23:51
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 10:23:51
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 10:23:51
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 10:23:51
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 10:23:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 10:23:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 10:23:52
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 10:23:52
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 10:23:52
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 10:23:52
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 10:23:53
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 10:23:53
__main__.py is_application_running() INFO: Application is already running with PID: 1452 06.01.24 10:23:53
__main__.py access_application() INFO: Connecting to the running instance with PID: 1452. 06.01.24 10:23:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 10:23:53
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 10:23:54
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 10:23:54
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 10:23:56
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 10:23:56
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 17:19:47
__main__.py is_application_running() INFO: Application is not running. 06.01.24 17:19:47
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 17:19:47
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 17:19:48
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 17:20:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 17:20:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 17:20:04
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 17:20:04
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 17:20:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 17:20:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 17:20:05
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 17:20:05
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 17:20:05
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 17:20:05
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 17:20:05
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 17:20:05
__main__.py is_application_running() INFO: Application is already running with PID: 1552 06.01.24 17:20:05
__main__.py access_application() INFO: Connecting to the running instance with PID: 1552. 06.01.24 17:20:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 17:20:05
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 17:20:06
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 17:20:06
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 17:20:07
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 17:20:07
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 17:21:19
__main__.py is_application_running() INFO: Application is not running. 06.01.24 17:21:20
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 17:21:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 17:21:20
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 17:21:35
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 17:21:35
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 17:21:35
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 17:21:35
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 17:21:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 17:21:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 17:21:36
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 17:21:36
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 17:21:37
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 17:21:37
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 17:21:37
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 17:21:37
__main__.py is_application_running() INFO: Application is already running with PID: 13688 06.01.24 17:21:38
__main__.py access_application() INFO: Connecting to the running instance with PID: 13688. 06.01.24 17:21:38
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 17:21:38
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 17:21:38
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 17:21:38
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 17:21:39
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 17:21:39
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 17:58:49
__main__.py is_application_running() INFO: Application is not running. 06.01.24 17:58:50
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 17:58:50
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 17:58:50
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 17:59:07
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 17:59:07
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 17:59:07
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 17:59:07
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 17:59:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 17:59:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 17:59:08
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 17:59:08
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 17:59:08
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 17:59:08
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 17:59:09
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 17:59:09
__main__.py is_application_running() INFO: Application is already running with PID: 16340 06.01.24 17:59:09
__main__.py access_application() INFO: Connecting to the running instance with PID: 16340. 06.01.24 17:59:09
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 17:59:09
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 17:59:10
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 17:59:10
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 17:59:10
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 17:59:10
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 06.01.24 17:59:10
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: invalid group reference 10 at position 1 06.01.24 17:59:10
__main__.py main() INFO: Continuing... 06.01.24 17:59:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 17:59:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 17:59:11
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 17:59:11
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 06.01.24 17:59:12
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 06.01.24 17:59:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 17:59:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 17:59:17
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 17:59:17
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 06.01.24 17:59:19
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 06.01.24 17:59:19
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 17:59:19
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 17:59:20
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 17:59:20
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 06.01.24 17:59:20
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 06.01.24 17:59:20
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:20
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:20
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:20
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:20
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:20
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:20
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:21
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:21
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:21
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:21
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 17:59:21
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 18:13:47
__main__.py is_application_running() INFO: Application is not running. 06.01.24 18:13:47
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 18:13:47
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 18:13:48
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 18:14:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 18:14:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 18:14:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 18:14:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 18:14:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 18:14:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 18:14:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 18:14:04
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 18:14:04
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 18:14:04
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 18:22:24
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 18:22:24
__main__.py is_application_running() INFO: Application is not running. 06.01.24 18:22:25
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\metaeditor.exe. 06.01.24 18:22:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 18:22:25
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 18:22:26
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 18:22:26
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 18:22:27
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 18:22:27
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 18:28:09
__main__.py is_application_running() INFO: Application is not running. 06.01.24 18:28:10
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 18:28:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 18:28:10
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 18:28:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 18:28:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 18:28:25
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 18:28:25
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 18:28:25
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:08:09
__main__.py is_application_running() INFO: Application is not running. 06.01.24 19:08:10
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 19:08:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 19:08:11
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:08:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 19:08:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 19:08:25
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 19:08:25
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 19:08:25
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:19:22
__main__.py is_application_running() INFO: Application is already running with PID: 8332 06.01.24 19:19:22
__main__.py access_application() INFO: Connecting to the running instance with PID: 8332. 06.01.24 19:19:22
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 19:19:22
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:19:22
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 19:19:22
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 19:19:22
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 19:19:22
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 19:19:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:19:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:19:45
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:19:45
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 19:19:45
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 19:19:45
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:34:50
__main__.py is_application_running() INFO: Application is not running. 06.01.24 19:34:51
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 19:34:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 19:34:51
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:35:06
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 19:35:06
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 19:35:06
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 19:35:06
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 19:35:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:35:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:35:07
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:35:07
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 19:35:07
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 19:35:07
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 19:35:08
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:35:08
__main__.py is_application_running() INFO: Application is already running with PID: 9784 06.01.24 19:35:08
__main__.py access_application() INFO: Connecting to the running instance with PID: 9784. 06.01.24 19:35:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 19:35:08
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:35:09
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 19:35:09
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 19:35:09
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 19:35:09
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:41:07
__main__.py is_application_running() INFO: Application is not running. 06.01.24 19:41:07
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 19:41:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 19:41:08
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:41:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 19:41:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 19:41:23
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 19:41:23
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 19:41:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:41:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:41:24
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:41:24
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 19:41:24
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 19:41:24
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 19:41:25
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:41:25
__main__.py is_application_running() INFO: Application is already running with PID: 17128 06.01.24 19:41:26
__main__.py access_application() INFO: Connecting to the running instance with PID: 17128. 06.01.24 19:41:26
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 19:41:26
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:41:27
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 19:41:27
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 19:41:27
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 19:41:27
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 06.01.24 19:41:27
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: invalid group reference 10 at position 1 06.01.24 19:41:27
__main__.py main() INFO: Continuing... 06.01.24 19:41:27
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:41:27
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:41:33
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:41:33
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 06.01.24 19:41:35
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 06.01.24 19:41:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:41:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:41:36
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:41:36
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 06.01.24 19:41:36
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 06.01.24 19:41:36
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:41:36
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:41:37
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:41:37
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 06.01.24 19:41:38
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.01.24 19:41:38
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:42:53
__main__.py is_application_running() INFO: Application is not running. 06.01.24 19:42:53
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 19:42:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 19:42:54
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:43:09
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 19:43:09
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 19:43:09
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 19:43:09
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 19:43:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:43:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:43:10
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:43:10
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 19:43:10
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 19:43:10
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 19:43:11
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:43:11
__main__.py is_application_running() INFO: Application is already running with PID: 5692 06.01.24 19:43:11
__main__.py access_application() INFO: Connecting to the running instance with PID: 5692. 06.01.24 19:43:11
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 19:43:11
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:43:12
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 19:43:12
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 19:43:12
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 19:43:12
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 06.01.24 19:43:32
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:55:25
__main__.py is_application_running() INFO: Application is not running. 06.01.24 19:55:25
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 19:55:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 19:55:26
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:55:42
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 19:55:42
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 19:55:42
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 19:55:42
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 19:55:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 19:55:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 19:55:43
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 19:55:43
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 19:55:43
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 19:55:43
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 19:55:44
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 19:55:44
__main__.py is_application_running() INFO: Application is already running with PID: 11716 06.01.24 19:55:44
__main__.py access_application() INFO: Connecting to the running instance with PID: 11716. 06.01.24 19:55:44
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 19:55:44
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 19:55:44
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 19:55:44
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 19:55:45
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 19:55:45
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 06.01.24 19:55:45
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 20:11:33
__main__.py is_application_running() INFO: Application is not running. 06.01.24 20:11:33
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 20:11:33
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 20:11:34
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 20:11:49
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 20:11:49
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 20:11:49
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 20:11:49
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 20:11:49
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 20:11:49
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 20:11:50
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 20:11:50
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 20:11:50
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 20:11:50
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 20:11:51
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 20:11:51
__main__.py is_application_running() INFO: Application is already running with PID: 16036 06.01.24 20:11:51
__main__.py access_application() INFO: Connecting to the running instance with PID: 16036. 06.01.24 20:11:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 20:11:51
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 20:11:52
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 20:11:52
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 20:11:52
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 20:11:52
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 06.01.24 20:11:52
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 20:17:04
__main__.py is_application_running() INFO: Application is not running. 06.01.24 20:17:04
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 20:17:04
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 20:17:05
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 20:17:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 20:17:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 20:17:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 20:17:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 20:17:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 20:17:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 20:17:21
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 20:17:21
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 20:17:22
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 20:17:22
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 20:17:22
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 20:17:22
__main__.py is_application_running() INFO: Application is already running with PID: 14828 06.01.24 20:17:23
__main__.py access_application() INFO: Connecting to the running instance with PID: 14828. 06.01.24 20:17:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 20:17:23
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 20:17:23
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 20:17:23
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 20:18:20
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 20:18:55
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 20:54:49
__main__.py is_application_running() INFO: Application is not running. 06.01.24 20:54:49
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 20:54:49
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 20:54:50
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 20:55:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 20:55:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 20:55:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 20:55:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 20:55:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 20:55:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 20:55:06
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 20:55:06
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 20:55:06
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 20:55:06
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 20:55:07
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 20:55:07
__main__.py is_application_running() INFO: Application is already running with PID: 2864 06.01.24 20:55:07
__main__.py access_application() INFO: Connecting to the running instance with PID: 2864. 06.01.24 20:55:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 20:55:07
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 20:55:08
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 20:55:08
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 21:02:43
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 21:03:51
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 06.01.24 21:03:51
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 21:11:27
__main__.py is_application_running() INFO: Application is not running. 06.01.24 21:11:28
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.01.24 21:11:28
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.01.24 21:11:28
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 21:11:44
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.01.24 21:11:44
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.01.24 21:11:44
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.01.24 21:11:44
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.01.24 21:11:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.01.24 21:11:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.01.24 21:11:45
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.01.24 21:11:45
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.01.24 21:11:45
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.01.24 21:11:45
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.01.24 21:11:46
__main__.py is_application_running() INFO: Checking if the application is already running. 06.01.24 21:11:46
__main__.py is_application_running() INFO: Application is already running with PID: 10264 06.01.24 21:11:46
__main__.py access_application() INFO: Connecting to the running instance with PID: 10264. 06.01.24 21:11:46
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.01.24 21:11:46
__main__.py wait_for_window() INFO: Window found and ready. 06.01.24 21:11:47
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.01.24 21:11:47
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.01.24 21:11:47
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.01.24 21:11:47
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: invalid group reference 10 at position 1 06.01.24 21:11:47
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 11:24:21
__main__.py is_application_running() INFO: Application is not running. 06.03.24 11:24:22
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 11:24:22
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 11:24:22
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 11:24:39
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 11:24:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 11:24:39
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 11:24:39
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 11:24:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 11:24:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 11:24:47
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 11:24:47
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 11:24:52
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 11:24:52
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 11:24:53
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 11:24:53
__main__.py is_application_running() INFO: Application is already running with PID: 14132 06.03.24 11:24:53
__main__.py access_application() INFO: Connecting to the running instance with PID: 14132. 06.03.24 11:24:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 11:24:53
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 11:24:54
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 11:24:54
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 12:15:01
__main__.py is_application_running() INFO: Application is not running. 06.03.24 12:15:02
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 12:15:02
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 12:15:02
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:02:26
__main__.py is_application_running() INFO: Application is not running. 06.03.24 15:02:26
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 15:02:26
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 15:02:27
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:02:43
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 15:02:43
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 15:02:43
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 15:02:43
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 15:02:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:02:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:02:44
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:02:44
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 15:02:44
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 15:02:44
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 15:02:45
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:02:45
__main__.py is_application_running() INFO: Application is already running with PID: 11544 06.03.24 15:02:45
__main__.py access_application() INFO: Connecting to the running instance with PID: 11544. 06.03.24 15:02:45
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 15:02:45
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:02:46
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 15:02:46
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:02:48
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 15:02:48
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 15:02:48
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:02:48
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 15:02:48
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 15:02:48
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:02:48
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 15:02:48
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 15:02:48
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:02:48
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 15:02:48
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 15:02:48
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:08:07
__main__.py is_application_running() INFO: Application is not running. 06.03.24 15:08:07
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 15:08:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 15:08:07
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:08:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 15:08:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 15:08:23
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 15:08:23
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 15:08:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:08:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:08:24
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:08:24
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 15:08:25
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 15:08:25
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 15:08:25
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:08:25
__main__.py is_application_running() INFO: Application is already running with PID: 272 06.03.24 15:08:25
__main__.py access_application() INFO: Connecting to the running instance with PID: 272. 06.03.24 15:08:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 15:08:25
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:08:26
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 15:08:26
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:08:30
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 15:08:30
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 15:08:30
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:08:30
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 15:08:30
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 15:08:30
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:08:30
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 15:08:30
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 15:08:30
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:08:30
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 15:08:30
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 15:08:30
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:12:54
__main__.py is_application_running() INFO: Application is not running. 06.03.24 15:12:54
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 15:12:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 15:12:55
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:13:10
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 15:13:10
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 15:13:10
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 15:13:10
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 15:13:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:13:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:13:11
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:13:11
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 15:13:11
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 15:13:11
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 15:13:12
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:13:12
__main__.py is_application_running() INFO: Application is already running with PID: 5572 06.03.24 15:13:12
__main__.py access_application() INFO: Connecting to the running instance with PID: 5572. 06.03.24 15:13:12
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 15:13:12
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:13:13
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 15:13:13
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:13:15
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 15:13:15
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 15:13:15
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:13:15
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 15:13:15
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 15:13:15
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:13:15
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 15:13:15
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 15:13:15
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:13:15
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 15:13:15
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 15:13:15
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 15:13:16
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 15:13:16
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 7368} 06.03.24 15:13:21
__main__.py main() ERROR: Failed to select symbol 'EURUSD'. Continuing. 06.03.24 15:13:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:13:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:13:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:13:22
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 06.03.24 15:13:25
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 06.03.24 15:13:33
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 15:13:33
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 15:13:33
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 06.03.24 15:13:33
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 06.03.24 15:13:34
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 15:13:34
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 06.03.24 15:13:34
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 06.03.24 15:13:34
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 15:13:34
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 06.03.24 15:13:34
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 06.03.24 15:13:34
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 15:13:34
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 15:13:34
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 15:13:34
__main__.py configure_dates() INFO: Use date checked. 06.03.24 15:13:35
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 15:13:35
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 15:13:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:13:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:13:36
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:13:36
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 06.03.24 15:13:36
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 06.03.24 15:13:45
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 15:13:45
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 15:13:45
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 06.03.24 15:13:45
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 06.03.24 15:13:46
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 15:13:46
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 06.03.24 15:13:46
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 06.03.24 15:13:46
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 15:13:46
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 06.03.24 15:13:46
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 06.03.24 15:13:46
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 15:13:46
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 15:13:46
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 15:13:46
__main__.py configure_dates() INFO: Use date checked. 06.03.24 15:13:46
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 15:13:46
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 15:13:46
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:13:46
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:13:47
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:13:47
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 06.03.24 15:13:48
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 06.03.24 15:13:50
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 15:13:50
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 15:13:50
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 06.03.24 15:13:50
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 06.03.24 15:13:50
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 15:13:50
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 06.03.24 15:13:50
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 06.03.24 15:13:50
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 15:13:50
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 06.03.24 15:13:50
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 06.03.24 15:13:51
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 15:13:51
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 15:13:51
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 15:13:51
__main__.py configure_dates() INFO: Use date checked. 06.03.24 15:13:51
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 15:13:51
__main__.py configure_dates() ERROR: Error has occurred when configuring the dates: strptime() argument 1 must be str, not None 06.03.24 15:13:51
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:13:51
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:25:46
__main__.py is_application_running() INFO: Application is not running. 06.03.24 15:25:47
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 15:25:47
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 15:25:47
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:26:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 15:26:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 15:26:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 15:26:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 15:26:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:26:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:26:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:26:04
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 15:26:04
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 15:26:04
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 15:26:05
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:26:05
__main__.py is_application_running() INFO: Application is not running. 06.03.24 15:26:05
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\metaeditor.exe. 06.03.24 15:26:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 15:26:06
__main__.py wait_for_window() ERROR: Exception occurred while waiting for the window: timed out 06.03.24 15:26:26
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 06.03.24 15:26:26
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: timed out 06.03.24 15:26:26
__main__.py main() INFO: Continuing... 06.03.24 15:26:26
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:26:26
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:26:27
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:26:27
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 06.03.24 15:26:27
__main__.py main() ERROR: Failed to select EA 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4'. Continuing. 06.03.24 15:26:27
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:26:27
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:26:29
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:26:29
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 06.03.24 15:26:29
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 06.03.24 15:26:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:26:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:26:30
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:26:30
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 06.03.24 15:26:30
__main__.py main() ERROR: Failed to select EA 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4'. Continuing. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:26:31
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:32:50
__main__.py is_application_running() INFO: Application is not running. 06.03.24 15:32:50
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 15:32:50
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 15:32:50
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:33:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 15:33:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 15:33:06
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 15:33:06
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 15:33:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:33:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:33:07
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:33:07
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 15:33:07
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 15:33:07
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 15:33:07
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:33:07
__main__.py is_application_running() INFO: Application is already running with PID: 2080 06.03.24 15:33:08
__main__.py access_application() INFO: Connecting to the running instance with PID: 2080. 06.03.24 15:33:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 15:33:08
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:33:09
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 15:33:09
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:33:12
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 15:33:12
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 15:33:12
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:33:12
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 15:33:12
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 15:33:12
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:33:12
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 15:33:12
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 15:33:12
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:33:12
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 15:33:12
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 15:33:12
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 15:33:13
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 14360} 06.03.24 15:33:18
__main__.py main() INFO: Continuing... 06.03.24 15:33:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:33:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:33:19
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:33:19
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 06.03.24 15:33:21
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 06.03.24 15:33:29
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 15:33:29
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 15:33:29
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 06.03.24 15:33:29
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 06.03.24 15:33:30
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 15:33:30
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 06.03.24 15:33:30
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 06.03.24 15:33:30
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 15:33:30
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 06.03.24 15:33:30
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 06.03.24 15:33:30
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 15:33:30
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 15:33:30
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 15:33:31
__main__.py configure_dates() INFO: Use date checked. 06.03.24 15:33:31
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 15:33:31
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 15:33:31
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:33:31
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:33:32
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:33:32
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 06.03.24 15:33:32
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 06.03.24 15:33:41
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 15:33:41
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 15:33:41
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 06.03.24 15:33:41
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 06.03.24 15:33:42
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 15:33:42
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 06.03.24 15:33:42
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 06.03.24 15:33:42
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 15:33:42
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 06.03.24 15:33:42
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 06.03.24 15:33:42
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 15:33:42
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 15:33:42
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 15:33:42
__main__.py configure_dates() INFO: Use date checked. 06.03.24 15:33:43
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 15:33:43
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 15:33:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:33:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:33:44
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:33:44
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 06.03.24 15:33:44
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 06.03.24 15:33:46
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 15:33:46
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:33:46
__main__.py is_application_running() INFO: Application is already running with PID: 14368 06.03.24 15:33:47
__main__.py access_application() INFO: Connecting to the running instance with PID: 14368. 06.03.24 15:33:47
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 15:33:47
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:33:47
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 06.03.24 15:33:47
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:33:51
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Maximum % the equity can lose in a netting set (for Cut Off)'. 06.03.24 15:33:51
__main__.py configure_expert_properties() INFO: Setting property 'Maximum % the equity can lose in a netting set (for Cut Off)' to '10' 06.03.24 15:33:51
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:33:51
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Use Fixed Lots?'. 06.03.24 15:33:51
__main__.py configure_expert_properties() INFO: Setting property 'Use Fixed Lots?' to 'false' 06.03.24 15:33:51
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:33:51
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Use Risk as per equity?'. 06.03.24 15:33:51
__main__.py configure_expert_properties() INFO: Setting property 'Use Risk as per equity?' to 'true' 06.03.24 15:33:51
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 15:33:51
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 15:33:52
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 06.03.24 15:33:52
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 06.03.24 15:33:52
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 15:33:52
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 06.03.24 15:33:52
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 06.03.24 15:33:52
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 15:33:52
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 06.03.24 15:33:52
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 06.03.24 15:33:53
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 15:33:53
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 15:33:53
__main__.py configure_dates() INFO: No dates to configure. Exiting. 06.03.24 15:33:53
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 15:33:53
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:47:04
__main__.py is_application_running() INFO: Application is not running. 06.03.24 15:47:05
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 15:47:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 15:47:05
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:47:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 15:47:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 15:47:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 15:47:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 15:47:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 15:47:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 15:47:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 15:47:22
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 15:47:22
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 15:47:22
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 15:47:22
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 15:47:22
__main__.py is_application_running() INFO: Application is already running with PID: 14504 06.03.24 15:47:23
__main__.py access_application() INFO: Connecting to the running instance with PID: 14504. 06.03.24 15:47:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 15:47:23
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 15:47:24
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 15:47:24
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:47:27
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 15:47:27
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 15:47:27
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:47:27
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 15:47:27
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 15:47:27
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:47:27
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 15:47:27
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 15:47:27
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 15:47:27
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 15:47:27
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 15:47:27
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 15:47:28
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 7956} 06.03.24 15:47:33
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:03:46
__main__.py is_application_running() INFO: Application is not running. 06.03.24 16:03:46
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 16:03:46
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:03:47
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:04:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 16:04:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 16:04:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 16:04:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 16:04:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:04:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:04:05
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:04:05
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 16:04:05
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 16:04:05
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 16:04:05
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:04:05
__main__.py is_application_running() INFO: Application is already running with PID: 15076 06.03.24 16:04:06
__main__.py access_application() INFO: Connecting to the running instance with PID: 15076. 06.03.24 16:04:06
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 16:04:06
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:04:07
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 16:04:07
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:04:11
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 16:04:11
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 16:04:11
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:04:11
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 16:04:11
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 16:04:11
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:04:11
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 16:04:11
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 16:04:11
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:04:11
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 16:04:11
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 16:04:11
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 16:04:11
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 15640} 06.03.24 16:04:16
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:04:55
__main__.py is_application_running() INFO: Application is not running. 06.03.24 16:04:56
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 16:04:56
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:04:56
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:05:13
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 16:05:13
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 16:05:14
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 16:05:14
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 16:05:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:05:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:05:15
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:05:15
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 16:05:15
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 16:05:15
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 16:05:15
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:05:15
__main__.py is_application_running() INFO: Application is already running with PID: 15160 06.03.24 16:05:16
__main__.py access_application() INFO: Connecting to the running instance with PID: 15160. 06.03.24 16:05:16
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 16:05:16
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:05:16
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 16:05:16
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:05:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 16:05:20
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 16:05:20
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:05:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 16:05:20
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 16:05:20
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:05:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 16:05:20
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 16:05:20
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:05:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 16:05:20
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 16:05:20
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 16:05:21
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 16:05:36
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 06.03.24 16:05:36
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 06.03.24 16:05:36
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 16:05:36
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 06.03.24 16:05:36
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 06.03.24 16:05:37
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 16:05:37
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 06.03.24 16:05:37
__main__.py choose_modelling() INFO: Every tick has already been selected. 06.03.24 16:05:37
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 16:05:37
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 16:05:37
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 16:05:37
__main__.py configure_dates() INFO: Use date checked. 06.03.24 16:05:37
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 16:05:37
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 16:05:37
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:05:37
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:05:38
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:05:38
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 06.03.24 16:05:38
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 06.03.24 16:05:47
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 16:05:47
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:08:06
__main__.py is_application_running() INFO: Application is not running. 06.03.24 16:08:07
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 16:08:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:08:07
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:08:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 16:08:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 16:08:25
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 16:08:25
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 16:08:25
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:08:25
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:08:26
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:08:26
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 16:08:26
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 16:08:26
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 16:08:27
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:08:27
__main__.py is_application_running() INFO: Application is already running with PID: 11928 06.03.24 16:08:27
__main__.py access_application() INFO: Connecting to the running instance with PID: 11928. 06.03.24 16:08:27
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 16:08:27
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:08:28
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 16:08:28
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:08:31
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 16:08:31
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 16:08:31
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:08:31
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 16:08:31
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 16:08:31
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:08:31
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 16:08:31
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 16:08:31
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:08:31
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 16:08:31
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 16:08:31
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 16:08:32
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:08:32
__main__.py wait_for_window() ERROR: Exception occurred while waiting for the window: timed out 06.03.24 16:08:37
__main__.py main() ERROR: Exception occurred while configuring the Strategy Tester: timed out 06.03.24 16:08:37
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:09:55
__main__.py is_application_running() INFO: Application is not running. 06.03.24 16:09:56
__main__.py access_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 06.03.24 16:09:56
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:09:56
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:10:14
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 06.03.24 16:10:14
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 06.03.24 16:10:14
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 06.03.24 16:10:14
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 06.03.24 16:10:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:10:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:10:15
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:10:15
__main__.py choose_EA() INFO: Navigating through options to find 'LC\LC Netting.ex4' 06.03.24 16:10:15
__main__.py choose_EA() INFO: Found 'LC\LC Netting.ex4' in the options. 06.03.24 16:10:15
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 16:10:16
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:10:16
__main__.py is_application_running() INFO: Application is already running with PID: 16732 06.03.24 16:10:16
__main__.py access_application() INFO: Connecting to the running instance with PID: 16732. 06.03.24 16:10:16
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 16:10:16
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:10:17
__main__.py ea_base_name() INFO: Converted 'LC\LC Netting.ex4' to 'LC Netting' 06.03.24 16:10:17
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:10:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Cut Off?'. 06.03.24 16:10:20
__main__.py configure_expert_properties() INFO: Setting property 'Allow Cut Off?' to 'False' 06.03.24 16:10:20
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:10:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Allow Netting?'. 06.03.24 16:10:20
__main__.py configure_expert_properties() INFO: Setting property 'Allow Netting?' to 'true' 06.03.24 16:10:20
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:10:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Initial Lots'. 06.03.24 16:10:20
__main__.py configure_expert_properties() INFO: Setting property 'Initial Lots' to '0.03' 06.03.24 16:10:20
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:10:20
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Start Hour of EA'. 06.03.24 16:10:20
__main__.py configure_expert_properties() INFO: Setting property 'Start Hour of EA' to '2' 06.03.24 16:10:20
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 16:10:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:10:21
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:10:26
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 16:10:26
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'AUDJPY, Australian Dollar vs Japanese Yen', ComboBox 06.03.24 16:10:27
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 06.03.24 16:10:27
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 16:10:27
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M30', ComboBox 06.03.24 16:10:27
__main__.py choose_period() INFO: Found and selected M1 in the dropdown. 06.03.24 16:10:28
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 16:10:28
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 06.03.24 16:10:28
__main__.py choose_modelling() INFO: Every tick has already been selected. 06.03.24 16:10:28
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 16:10:28
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 16:10:28
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 16:10:28
__main__.py configure_dates() INFO: Use date checked. 06.03.24 16:10:28
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 16:10:28
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 16:10:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:10:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:10:29
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:10:29
__main__.py choose_EA() INFO: Navigating through options to find 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' 06.03.24 16:10:29
__main__.py choose_EA() INFO: Found 'hidden divergence & regular divergence\double tf hid reg div with ema.ex4' in the options. 06.03.24 16:10:38
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 16:10:38
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:10:38
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:10:38
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 16:10:38
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 06.03.24 16:10:38
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 06.03.24 16:10:38
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 16:10:38
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 06.03.24 16:10:38
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 06.03.24 16:10:38
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 16:10:38
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Every tick (the most precise method based on all available least timeframes to generate each tick)', ComboBox 06.03.24 16:10:38
__main__.py choose_modelling() INFO: Found and selected Control points in the dropdown. 06.03.24 16:10:39
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 16:10:39
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 16:10:39
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 16:10:39
__main__.py configure_dates() INFO: Use date checked. 06.03.24 16:10:39
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 16:10:39
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 16:10:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:10:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:10:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:10:40
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 06.03.24 16:10:40
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 06.03.24 16:10:50
__main__.py configure_expert_properties() INFO: No properties to set. Exiting. 06.03.24 16:10:50
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:10:50
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:10:50
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 16:10:50
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 06.03.24 16:10:50
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 06.03.24 16:10:50
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 16:10:50
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 06.03.24 16:10:50
__main__.py choose_period() INFO: Found and selected M15 in the dropdown. 06.03.24 16:10:50
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 16:10:50
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Control points (a very crude method based on the nearest less timeframe, the results must not be considered)', ComboBox 06.03.24 16:10:50
__main__.py choose_modelling() INFO: Found and selected Open prices in the dropdown. 06.03.24 16:10:51
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 16:10:51
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 16:10:51
__main__.py configure_dates() INFO: Searching for the Use date button in the Strategy Tester... 06.03.24 16:10:51
__main__.py configure_dates() INFO: Use date checked. 06.03.24 16:10:51
__main__.py configure_dates() INFO: Searching for the dates in the Strategy Tester... 06.03.24 16:10:51
__main__.py main() ERROR: Failed to configure the dates. Continuing. 06.03.24 16:10:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 06.03.24 16:10:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 06.03.24 16:10:52
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 06.03.24 16:10:52
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 06.03.24 16:10:52
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 06.03.24 16:10:54
__main__.py configure_expert_properties() INFO: Clicked on 'Modify expert' button 06.03.24 16:10:55
__main__.py is_application_running() INFO: Checking if the application is already running. 06.03.24 16:10:55
__main__.py is_application_running() INFO: Application is already running with PID: 12768 06.03.24 16:10:55
__main__.py access_application() INFO: Connecting to the running instance with PID: 12768. 06.03.24 16:10:55
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*MetaEditor.*. 06.03.24 16:10:55
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:10:56
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 06.03.24 16:10:56
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:10:59
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Maximum % the equity can lose in a netting set (for Cut Off)'. 06.03.24 16:10:59
__main__.py configure_expert_properties() INFO: Setting property 'Maximum % the equity can lose in a netting set (for Cut Off)' to '10' 06.03.24 16:10:59
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:10:59
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Use Fixed Lots?'. 06.03.24 16:10:59
__main__.py configure_expert_properties() INFO: Setting property 'Use Fixed Lots?' to 'false' 06.03.24 16:10:59
__main__.py replace_value() INFO: Successfully replaced the value in the string. 06.03.24 16:10:59
__main__.py change_input_value() INFO: Successfully replaced the value for property 'Use Risk as per equity?'. 06.03.24 16:10:59
__main__.py configure_expert_properties() INFO: Setting property 'Use Risk as per equity?' to 'true' 06.03.24 16:10:59
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window 06.03.24 16:10:59
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 06.03.24 16:10:59
__main__.py wait_for_window() INFO: Window found and ready. 06.03.24 16:10:59
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 06.03.24 16:10:59
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 06.03.24 16:10:59
__main__.py choose_symbol() INFO: Found and selected AUDJPY in the dropdown. 06.03.24 16:11:00
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 06.03.24 16:11:00
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M15', ComboBox 06.03.24 16:11:00
__main__.py choose_period() INFO: Found and selected M30 in the dropdown. 06.03.24 16:11:00
__main__.py choose_modelling() INFO: Searching for the Model input in the Strategy Tester 06.03.24 16:11:00
__main__.py choose_modelling() INFO: Found Model input: win32_controls.ComboBoxWrapper - 'Open prices only (fastest method to analyze the bar just completed, only for EAs that explicitly control bar opening)', ComboBox 06.03.24 16:11:00
__main__.py choose_modelling() INFO: Found and selected Every tick in the dropdown. 06.03.24 16:11:00
__main__.py configure_visual_mode() INFO: Searching for the Visual mode button in the Strategy Tester 06.03.24 16:11:00
__main__.py configure_visual_mode() INFO: Visual mode unchecked. 06.03.24 16:11:01
__main__.py configure_dates() INFO: No dates to configure. Exiting. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
__main__.py main() INFO: Skipping row with missing 'Expert' value. 06.03.24 16:11:01
