__main__.py is_application_running() INFO: Checking if the application is already running. 05.22.24 22:04:01
__main__.py is_application_running() INFO: Application is already running with PID: 2832 05.22.24 22:04:01
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2832. 05.22.24 22:04:01
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.22.24 22:04:01
__main__.py wait_for_window() INFO: Window found and ready. 05.22.24 22:04:01
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Logging all child windows: 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: For Help, press F1, msctls_statusbar32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Standard, AfxControlBar140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Timeframes, ToolbarWindow32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Line Studies, ToolbarWindow32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Charts, ToolbarWindow32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Standard, ToolbarWindow32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Terminal, AfxControlBar140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: 19:34:01, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Terminal, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Tester, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Expert Advisor, ComboBox 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Fib retracement\ao_swing_fib_ret_bo.ex4, ComboBox 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Fib retracement\ao_swing_fib_ret_bo.ex4, Edit 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Expert properties, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Symbol:, Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: GBPJPY, British Pound vs Japanese Yen, ComboBox 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Period:, Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: M1, ComboBox 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Symbol properties, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Model:, Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Every tick (the most precise method based on all available least timeframes to generate each tick), ComboBox 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Spread:, Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Current, ComboBox 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Current, Edit 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Open chart, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Modify expert, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Use date, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: From:, Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: 2023.10.25, SysDateTimePick32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Optimization, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: To:, Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: 2023.10.26, SysDateTimePick32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Visual mode, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , msctls_trackbar32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: | |, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Skip to, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: 2024.05.22, SysDateTimePick32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Start, Button 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , msctls_progress32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Data Window, AfxControlBar140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Navigator, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysTreeView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: Data Window, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxControlBar140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , MDIClient 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: USDCHF,M1, Afx:00280000:b:00010003:00000006:00030861 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: , AfxFrameOrView140s 05.22.24 22:04:02
__main__.py log_all_child_windows() INFO: Child window: 0.0000, Edit 05.22.24 22:04:02
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:04:22
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.22.24 22:04:22
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Logging all child windows: 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: For Help, press F1, msctls_statusbar32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Standard, AfxControlBar140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Timeframes, ToolbarWindow32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Line Studies, ToolbarWindow32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Charts, ToolbarWindow32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Standard, ToolbarWindow32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Terminal, AfxControlBar140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: 19:34:27, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Terminal, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Tester, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Expert Advisor, ComboBox 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Fib retracement\ao_swing_fib_ret_bo.ex4, ComboBox 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Fib retracement\ao_swing_fib_ret_bo.ex4, Edit 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Expert properties, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Symbol:, Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: GBPJPY, British Pound vs Japanese Yen, ComboBox 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Period:, Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: M1, ComboBox 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Symbol properties, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Model:, Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Every tick (the most precise method based on all available least timeframes to generate each tick), ComboBox 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Spread:, Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Current, ComboBox 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Current, Edit 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Open chart, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Modify expert, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Use date, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: From:, Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: 2023.10.25, SysDateTimePick32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Optimization, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: To:, Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: 2023.10.26, SysDateTimePick32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Visual mode, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , msctls_trackbar32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: | |, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Skip to, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: 2024.05.22, SysDateTimePick32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Start, Button 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , msctls_progress32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Data Window, AfxControlBar140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Navigator, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysTreeView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: Data Window, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxControlBar140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , MDIClient 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: USDCHF,M1, Afx:00280000:b:00010003:00000006:00030861 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: , AfxFrameOrView140s 05.22.24 22:04:27
__main__.py log_all_child_windows() INFO: Child window: 0.0000, Edit 05.22.24 22:04:27
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:04:47
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.22.24 22:04:47
__main__.py is_application_running() INFO: Checking if the application is already running. 05.22.24 22:14:25
__main__.py is_application_running() INFO: Application is already running with PID: 2832 05.22.24 22:14:25
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2832. 05.22.24 22:14:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.22.24 22:14:25
__main__.py wait_for_window() INFO: Window found and ready. 05.22.24 22:14:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Logging all child windows: 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: For Help, press F1, msctls_statusbar32 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: Standard, AfxControlBar140s 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: Timeframes, ToolbarWindow32 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: Line Studies, ToolbarWindow32 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: Charts, ToolbarWindow32 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: Standard, ToolbarWindow32 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: Terminal, AfxControlBar140s 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: 19:44:25, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:25
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Terminal, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , #32770 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Tester, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Expert Advisor, ComboBox 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Fib retracement\ao_swing_fib_ret_bo.ex4, ComboBox 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Fib retracement\ao_swing_fib_ret_bo.ex4, Edit 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Expert properties, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Symbol:, Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: GBPJPY, British Pound vs Japanese Yen, ComboBox 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Period:, Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: M1, ComboBox 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Symbol properties, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Model:, Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Every tick (the most precise method based on all available least timeframes to generate each tick), ComboBox 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Spread:, Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Current, ComboBox 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Current, Edit 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Open chart, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Modify expert, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Use date, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: From:, Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: 2023.10.25, SysDateTimePick32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Optimization, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: To:, Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: 2023.10.26, SysDateTimePick32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Visual mode, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , msctls_trackbar32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: | |, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Skip to, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: 2024.05.22, SysDateTimePick32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Start, Button 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , Static 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , msctls_progress32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Data Window, AfxControlBar140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Navigator, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysTreeView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxWnd140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: Data Window, Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysListView32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , SysHeader32 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxControlBar140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , Afx:00280000:b:00010003:00000000:00000000 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , MDIClient 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: USDCHF,M1, Afx:00280000:b:00010003:00000006:00030861 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: , AfxFrameOrView140s 05.22.24 22:14:26
__main__.py log_all_child_windows() INFO: Child window: 0.0000, Edit 05.22.24 22:14:26
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.22.24 22:14:26
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.22.24 22:14:26
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.22.24 22:14:29
__main__.py is_application_running() INFO: Checking if the application is already running. 05.22.24 22:37:17
__main__.py is_application_running() INFO: Application is not running. 05.22.24 22:37:17
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.22.24 22:37:17
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.22.24 22:37:18
__main__.py wait_for_window() INFO: Window found and ready. 05.22.24 22:37:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:37:31
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.22.24 22:37:31
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.22.24 22:37:31
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.22.24 22:37:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.22.24 22:38:14
__main__.py is_application_running() INFO: Application is already running with PID: 1080 05.22.24 22:38:14
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1080. 05.22.24 22:38:14
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.22.24 22:38:14
__main__.py wait_for_window() INFO: Window found and ready. 05.22.24 22:38:15
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:38:15
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:38:35
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.22.24 22:38:35
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:38:40
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:39:00
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.22.24 22:39:00
__main__.py is_application_running() INFO: Checking if the application is already running. 05.22.24 22:39:33
__main__.py is_application_running() INFO: Application is already running with PID: 1080 05.22.24 22:39:33
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1080. 05.22.24 22:39:33
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.22.24 22:39:33
__main__.py wait_for_window() INFO: Window found and ready. 05.22.24 22:39:33
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:39:33
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:39:53
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.22.24 22:39:53
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:39:59
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.22.24 22:39:59
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.22.24 22:39:59
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.22.24 22:39:59
__main__.py is_application_running() INFO: Checking if the application is already running. 05.22.24 22:40:37
__main__.py is_application_running() INFO: Application is not running. 05.22.24 22:40:37
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.22.24 22:40:37
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.22.24 22:40:38
__main__.py wait_for_window() INFO: Window found and ready. 05.22.24 22:40:50
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:40:50
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:41:10
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.22.24 22:41:10
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:41:16
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.22.24 22:41:16
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.22.24 22:41:16
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.22.24 22:41:16
__main__.py is_application_running() INFO: Checking if the application is already running. 05.22.24 22:45:20
__main__.py is_application_running() INFO: Application is not running. 05.22.24 22:45:21
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.22.24 22:45:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.22.24 22:45:21
__main__.py wait_for_window() INFO: Window found and ready. 05.22.24 22:45:35
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:45:35
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:45:55
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.22.24 22:45:55
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.22.24 22:46:00
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.22.24 22:46:20
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.22.24 22:46:20
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 01:09:50
__main__.py is_application_running() INFO: Application is not running. 05.23.24 01:09:50
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.23.24 01:09:50
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 01:09:51
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 01:10:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 01:10:03
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 01:10:12
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 01:10:12
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 01:10:12
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: [WinError 299] Only part of a ReadProcessMemory or WriteProcessMemory request was completed. 05.23.24 01:10:12
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 01:10:17
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 01:10:37
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 01:10:37
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 01:16:19
__main__.py is_application_running() INFO: Application is already running with PID: 4052 05.23.24 01:16:19
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 4052. 05.23.24 01:16:19
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 01:16:19
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 01:16:19
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 01:16:20
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 01:16:25
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 01:16:25
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 01:16:25
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: [WinError 299] Only part of a ReadProcessMemory or WriteProcessMemory request was completed. 05.23.24 01:16:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 01:16:30
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 01:16:50
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 01:16:50
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 01:27:41
__main__.py is_application_running() INFO: Application is not running. 05.23.24 01:27:41
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.23.24 01:27:41
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 01:27:42
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 01:27:55
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 01:27:55
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 01:28:03
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 01:28:03
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 01:28:03
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: [WinError 299] Only part of a ReadProcessMemory or WriteProcessMemory request was completed. 05.23.24 01:28:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 01:28:08
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 01:28:28
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 01:28:28
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 01:43:07
__main__.py is_application_running() INFO: Application is not running. 05.23.24 01:43:07
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.23.24 01:43:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 01:43:07
__main__.py wait_for_window() ERROR: Exception occurred while waiting for the window: There are 2 elements that match the criteria {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 11588} 05.23.24 01:43:19
__main__.py main() ERROR: Exception occurred: There are 2 elements that match the criteria {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 11588} 05.23.24 01:43:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 02:02:00
__main__.py is_application_running() INFO: Application is not running. 05.23.24 02:02:01
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.23.24 02:02:01
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 02:02:01
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 02:02:14
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 02:02:14
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 02:02:22
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 02:02:22
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 02:02:22
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: {'auto_id': 'MenuBar', 'control_type': 'MenuBar', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - '2100219990: Tradeview-Demo - Demo Account - Tradeview, Ltd. - [USDCHF,M1]', MetaQuotes::MetaTrader::4.00, 3737180>, 'backend': 'win32'} 05.23.24 02:02:27
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 02:02:32
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 02:02:52
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 02:02:52
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 02:20:10
__main__.py is_application_running() INFO: Application is already running with PID: 16476 05.23.24 02:20:11
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16476. 05.23.24 02:20:11
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 02:20:11
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 02:20:11
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 02:20:11
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 02:20:16
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 02:20:16
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 02:20:16
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: {'auto_id': 'MenuBar', 'control_type': 'MenuBar', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - '2100219990: Tradeview-Demo - Demo Account - Tradeview, Ltd. - [USDCHF,M1]', MetaQuotes::MetaTrader::4.00, 3737180>, 'backend': 'win32'} 05.23.24 02:20:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 02:20:26
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 02:20:46
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 02:20:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 12:48:09
__main__.py is_application_running() INFO: Application is not running. 05.23.24 12:48:10
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.23.24 12:48:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 12:48:10
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 12:48:22
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 12:48:22
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 12:48:30
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 12:48:30
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 12:48:30
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 15520} 05.23.24 12:48:35
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 12:48:40
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 12:49:00
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 12:49:00
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 12:51:06
__main__.py is_application_running() INFO: Application is already running with PID: 15520 05.23.24 12:51:06
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 15520. 05.23.24 12:51:06
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 12:51:06
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 12:51:06
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 12:51:06
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 12:51:11
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 12:51:11
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 12:51:11
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: {'title': 'View', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - '2100219990: Tradeview-Demo - Demo Account - Tradeview, Ltd. - [USDCHF,M1]', MetaQuotes::MetaTrader::4.00, 7472856>, 'backend': 'win32'} 05.23.24 12:51:16
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 12:51:21
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 12:51:41
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 12:51:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 13:12:48
__main__.py is_application_running() INFO: Application is already running with PID: 15520 05.23.24 13:12:48
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 15520. 05.23.24 13:12:48
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 13:12:48
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 13:12:48
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 13:12:48
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 13:12:53
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 13:12:53
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 13:12:53
__main__.py log_all_child_windows() INFO: Child windows logged to child_windows.log. 05.23.24 13:12:53
__main__.py open_strategy_tester_via_menu() ERROR: Exception occurred while trying to open Strategy Tester via menu: {'auto_id': 'MenuBar', 'control_type': 'MenuBar', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - '2100219990: Tradeview-Demo - Demo Account - Tradeview, Ltd. - [USDCHF,M1]', MetaQuotes::MetaTrader::4.00, 7472856>, 'backend': 'win32'} 05.23.24 13:12:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 13:13:03
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 13:13:23
__main__.py main() ERROR: Failed to open the Strategy Tester. Exiting. 05.23.24 13:13:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 18:01:14
__main__.py is_application_running() INFO: Application is already running with PID: 16884 05.23.24 18:01:15
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16884. 05.23.24 18:01:15
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 18:01:15
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 18:01:15
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 18:01:15
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 18:01:20
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.23.24 18:01:20
__main__.py open_strategy_tester_via_menu() INFO: Attempting to open Strategy Tester via menu. 05.23.24 18:01:20
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 18:11:09
__main__.py is_application_running() INFO: Application is already running with PID: 16884 05.23.24 18:11:09
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16884. 05.23.24 18:11:09
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 18:11:09
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 18:11:09
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 18:11:09
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 18:11:14
__main__.py main() ERROR: Exception occurred:  05.23.24 18:11:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 18:14:37
__main__.py is_application_running() INFO: Application is already running with PID: 16884 05.23.24 18:14:37
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16884. 05.23.24 18:14:37
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 18:14:37
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 18:14:37
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 18:14:38
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 18:14:43
__main__.py main() ERROR: Exception occurred:  05.23.24 18:15:38
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 18:18:05
__main__.py is_application_running() INFO: Application is already running with PID: 16884 05.23.24 18:18:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16884. 05.23.24 18:18:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 18:18:05
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 18:18:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 18:18:05
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 18:18:10
__main__.py main() ERROR: Exception occurred: {'title': 'View', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - '2100219990: Tradeview-Demo - Demo Account - Tradeview, Ltd. - [USDCHF,M1]', MetaQuotes::MetaTrader::4.00, 2099456>, 'backend': 'win32'} 05.23.24 18:18:15
__main__.py is_application_running() INFO: Checking if the application is already running. 05.23.24 19:05:31
__main__.py is_application_running() INFO: Application is already running with PID: 16884 05.23.24 19:05:31
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16884. 05.23.24 19:05:31
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.23.24 19:05:31
__main__.py wait_for_window() INFO: Window found and ready. 05.23.24 19:05:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.23.24 19:05:31
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.23.24 19:05:37
__main__.py main() ERROR: Exception occurred: {'title': 'Application', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - '2100219990: Tradeview-Demo - Demo Account - Tradeview, Ltd. - [USDCHF,M1]', MetaQuotes::MetaTrader::4.00, 2099456>, 'backend': 'win32'} 05.23.24 19:05:42
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 12:55:53
__main__.py is_application_running() INFO: Application is not running. 05.24.24 12:55:53
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.24.24 12:55:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 12:55:54
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 12:56:10
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 12:56:10
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 12:56:10
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 12:56:10
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 12:56:11
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 12:57:15
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 12:57:15
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 12:57:15
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 12:57:15
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 12:57:15
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 12:57:16
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.24.24 12:57:21
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.24.24 12:57:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 12:57:26
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 12:57:26
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 12:57:26
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 12:57:26
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 13:05:18
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 13:05:18
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 13:05:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 13:05:18
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 13:05:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 13:05:19
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 13:05:19
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 13:05:19
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 13:05:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 13:08:11
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 13:08:11
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 13:08:11
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 13:08:11
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 13:08:11
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 13:08:11
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 13:08:11
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 13:08:11
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 13:08:11
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 13:12:25
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 13:12:26
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 13:12:26
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 13:12:26
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 13:12:26
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 13:12:26
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 13:12:26
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 13:12:26
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 13:12:26
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 15:47:31
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 15:47:31
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 15:47:31
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 15:47:31
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 15:47:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 15:47:31
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 15:47:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 15:51:41
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 15:51:41
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 15:51:41
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 15:51:41
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 15:51:41
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 15:51:41
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 15:51:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 16:27:11
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 16:27:11
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 16:27:11
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 16:27:11
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 16:27:11
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 16:27:12
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 16:27:12
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 16:27:12
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 16:27:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 16:27:12
__main__.py select_expert_advisor() INFO: Changing the value of 'Indicator' combo box to 'Expert Advisor'. 05.24.24 16:27:12
__main__.py select_expert_advisor() INFO: Successfully changed the value to 'Expert Advisor'. 05.24.24 16:27:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 16:27:12
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 16:27:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 16:27:32
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 16:27:52
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 16:29:52
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 16:29:53
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 16:29:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 16:29:53
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 16:29:53
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 16:29:53
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 16:29:53
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 16:29:53
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 16:29:53
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 16:29:53
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 16:30:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 16:30:13
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 16:30:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 16:30:33
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 16:30:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 20:22:27
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 20:22:28
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 20:22:28
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 20:22:28
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 20:22:28
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 20:22:28
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 20:22:28
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 20:22:28
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 20:22:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 20:22:28
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 20:22:48
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 20:22:48
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 20:23:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 20:23:08
__main__.py select_expert_advisor() ERROR: Exception occurred while changing the 'Indicator' combo box: timed out 05.24.24 20:23:28
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 20:32:23
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 20:32:23
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 20:32:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 20:32:23
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 20:32:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 20:32:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 20:32:23
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 20:32:23
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 20:32:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 20:32:23
__main__.py select_expert_advisor() INFO: Changing the value of 'Indicator' combo box to 'Expert Advisor'. 05.24.24 20:32:23
__main__.py select_expert_advisor() INFO: Successfully changed the value to 'Expert Advisor'. 05.24.24 20:32:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 20:32:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 20:32:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 20:32:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 20:32:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 22:25:00
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 22:25:00
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 22:25:00
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 22:25:00
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 22:25:00
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 22:25:00
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 22:25:01
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 22:25:01
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 22:25:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:25:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:25:05
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:25:05
__main__.py choose_EA() WARNING: No combo box with 'ex4' or 'ex5' found. 05.24.24 22:25:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:26:00
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:26:02
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:26:02
__main__.py choose_EA() WARNING: No combo box with 'ex4' or 'ex5' found. 05.24.24 22:26:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:26:41
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:26:42
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:26:42
__main__.py choose_EA() WARNING: No combo box with 'ex4' or 'ex5' found. 05.24.24 22:26:42
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 22:26:44
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 22:26:44
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 22:26:44
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 22:26:44
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 22:26:44
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 22:26:44
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 22:26:44
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 22:26:44
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 22:26:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:26:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:26:52
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:26:52
__main__.py choose_EA() WARNING: No combo box with 'ex4' or 'ex5' found. 05.24.24 22:26:52
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:27:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:27:05
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:27:17
__main__.py choose_EA() WARNING: No combo box with 'ex4' or 'ex5' found. 05.24.24 22:35:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:35:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:35:21
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:35:23
__main__.py choose_EA() WARNING: No combo box with 'ex4' or 'ex5' found. 05.24.24 22:35:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 22:39:51
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 22:39:51
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 22:39:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 22:39:51
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 22:39:51
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 22:39:51
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 22:39:51
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 22:40:36
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 22:40:36
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 22:40:36
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 22:40:36
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 22:40:37
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 22:40:37
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 22:40:37
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 22:40:46
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 22:40:46
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:47:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:47:43
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:47:48
__main__.py choose_EA() INFO: Found combo box with title: LC\LC Netting.ex4 05.24.24 22:48:22
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: ComboBoxWrapper.select() missing 1 required positional argument: 'item' 05.24.24 22:48:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:51:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:51:58
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:52:00
__main__.py choose_EA() INFO: Found combo box with title: LC\LC Netting.ex4 05.24.24 22:53:00
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: ComboBoxWrapper.select() missing 1 required positional argument: 'item' 05.24.24 22:53:00
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 22:53:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 22:53:08
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 22:53:09
__main__.py choose_EA() INFO: Found combo box with title: LC\LC Netting.ex4 05.24.24 22:53:13
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: ComboBoxWrapper.select() missing 1 required positional argument: 'item' 05.24.24 22:53:13
__main__.py is_application_running() INFO: Checking if the application is already running. 05.24.24 23:07:21
__main__.py is_application_running() INFO: Application is already running with PID: 2556 05.24.24 23:07:21
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2556. 05.24.24 23:07:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.24.24 23:07:21
__main__.py wait_for_window() INFO: Window found and ready. 05.24.24 23:07:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.24.24 23:07:21
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.24.24 23:07:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.24.24 23:07:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.24.24 23:07:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 23:07:25
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 23:07:26
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 23:07:29
__main__.py choose_EA() INFO: Found combo box with title: LC\LC Netting.ex4 05.24.24 23:07:42
__main__.py choose_EA() WARNING: No options found in the combo box dropdown. 05.24.24 23:10:37
__main__.py choose_EA() WARNING: No combo box with 'ex4' or 'ex5' found. 05.24.24 23:10:37
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.24.24 23:10:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.24.24 23:10:39
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.24.24 23:10:42
__main__.py is_application_running() INFO: Checking if the application is already running. 05.25.24 21:35:43
__main__.py is_application_running() INFO: Application is already running with PID: 13708 05.25.24 21:35:44
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 13708. 05.25.24 21:35:44
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.25.24 21:35:44
__main__.py wait_for_window() INFO: Window found and ready. 05.25.24 21:35:44
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.25.24 21:35:44
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.25.24 21:35:44
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.25.24 21:35:44
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.25.24 21:35:45
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.25.24 21:35:49
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.25.24 21:35:50
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.25.24 21:35:57
__main__.py choose_EA() INFO: Found combo box with title: AO Swing High Low\swing high low.ex4 05.25.24 21:35:57
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.25.24 21:35:57
__main__.py is_application_running() INFO: Checking if the application is already running. 05.25.24 21:37:53
__main__.py is_application_running() INFO: Application is already running with PID: 13708 05.25.24 21:37:53
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 13708. 05.25.24 21:37:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.25.24 21:37:53
__main__.py wait_for_window() INFO: Window found and ready. 05.25.24 21:37:53
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.25.24 21:37:53
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.25.24 21:37:53
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.25.24 21:37:53
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.25.24 21:37:53
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.25.24 21:37:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.25.24 21:37:58
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.25.24 21:38:00
__main__.py choose_EA() INFO: Found combo box with title: Fib retracement\ao_swing_fib_ret_bo.ex4 05.25.24 21:38:00
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.25.24 21:38:01
__main__.py choose_EA() INFO: Found and selected the option 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.25.24 21:38:18
__main__.py choose_EA() INFO: Successfully selected an option from the combo box. 05.25.24 21:38:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.25.24 21:38:55
__main__.py is_application_running() INFO: Application is already running with PID: 13708 05.25.24 21:38:55
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 13708. 05.25.24 21:38:55
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.25.24 21:38:55
__main__.py wait_for_window() INFO: Window found and ready. 05.25.24 21:38:55
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.25.24 21:38:55
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.25.24 21:38:55
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.25.24 21:38:55
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.25.24 21:38:55
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.25.24 21:38:55
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.25.24 21:38:57
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.25.24 21:38:57
__main__.py choose_EA() INFO: Found combo box with title: Nadaraya-Watson\Nadaraya-Watson Netting.ex4 05.25.24 21:38:57
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.25.24 21:38:57
__main__.py is_application_running() INFO: Checking if the application is already running. 05.25.24 21:42:06
__main__.py is_application_running() INFO: Application is already running with PID: 13708 05.25.24 21:42:06
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 13708. 05.25.24 21:42:06
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.25.24 21:42:06
__main__.py wait_for_window() INFO: Window found and ready. 05.25.24 21:42:06
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.25.24 21:42:06
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.25.24 21:42:06
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.25.24 21:42:06
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.25.24 21:42:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.25.24 21:42:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.25.24 21:42:07
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.25.24 21:42:07
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.25.24 21:42:07
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.25.24 21:42:08
__main__.py is_application_running() INFO: Checking if the application is already running. 05.25.24 21:54:04
__main__.py is_application_running() INFO: Application is already running with PID: 13708 05.25.24 21:54:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 13708. 05.25.24 21:54:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.25.24 21:54:05
__main__.py wait_for_window() INFO: Window found and ready. 05.25.24 21:54:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.25.24 21:54:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.25.24 21:54:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.25.24 21:54:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.25.24 21:54:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.25.24 21:54:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.25.24 21:54:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.25.24 21:54:06
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.25.24 21:54:06
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.25.24 21:54:06
__main__.py choose_EA() INFO: Successfully selected an option from the combo box. 05.25.24 21:54:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.25.24 21:54:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.25.24 21:54:33
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.25.24 21:54:33
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.25.24 21:54:33
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.25.24 21:54:33
__main__.py choose_EA() INFO: Successfully selected an option from the combo box. 05.25.24 21:54:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.25.24 21:54:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.25.24 21:54:59
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.25.24 21:54:59
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.25.24 21:54:59
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.25.24 21:54:59
__main__.py choose_EA() INFO: Successfully selected an option from the combo box. 05.25.24 21:55:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.26.24 23:16:38
__main__.py is_application_running() INFO: Application is already running with PID: 13644 05.26.24 23:16:38
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 13644. 05.26.24 23:16:38
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.26.24 23:16:38
__main__.py wait_for_window() INFO: Window found and ready. 05.26.24 23:16:38
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.26.24 23:16:38
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.26.24 23:16:38
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.26.24 23:16:38
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.26.24 23:16:38
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.26.24 23:16:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.26.24 23:16:39
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.26.24 23:16:39
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.26.24 23:16:39
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.26.24 23:16:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 10:41:48
__main__.py is_application_running() INFO: Application is not running. 05.27.24 10:41:48
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 10:41:48
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 10:41:48
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 10:42:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 10:42:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 10:42:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 10:42:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 10:42:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:42:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:42:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:42:06
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.27.24 10:42:06
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 10:42:06
__main__.py choose_EA() INFO: Successfully selected an option from the combo box. 05.27.24 10:42:11
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:42:11
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:42:13
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:42:13
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 4772} 05.27.24 10:42:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:42:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:42:19
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:42:19
__main__.py choose_EA() INFO: Found combo box with title: waverunner reversal heiken\waverunr reverse netting.ex4 05.27.24 10:42:21
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.27.24 10:42:21
__main__.py choose_EA() INFO: Successfully selected an option from the combo box. 05.27.24 10:42:21
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 10:48:14
__main__.py is_application_running() INFO: Application is not running. 05.27.24 10:48:15
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 10:48:15
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 10:48:15
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 10:48:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 10:48:31
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 10:48:31
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 10:48:31
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 10:48:31
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:48:31
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:48:32
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:48:32
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.27.24 10:48:32
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 10:48:32
__main__.py choose_EA() INFO: Found the combo box for EAs 05.27.24 10:48:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:48:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:48:35
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:48:35
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 8944} 05.27.24 10:48:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:48:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:48:41
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:48:41
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 8944} 05.27.24 10:48:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 10:50:59
__main__.py is_application_running() INFO: Application is not running. 05.27.24 10:50:59
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 10:50:59
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 10:50:59
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 10:51:15
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 10:51:15
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 10:51:15
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 10:51:15
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 10:51:15
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:51:15
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:51:16
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:51:16
__main__.py choose_EA() INFO: Found combo box with title: structurebreak_div_stc_2.ex4 05.27.24 10:51:16
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 10:51:16
__main__.py choose_EA() INFO: Found the combo box for EAs 05.27.24 10:51:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:51:17
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:51:31
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:51:31
__main__.py choose_EA() INFO: Found combo box with title: rsi_ao_div_Suprtrd_cross_1.ex4 05.27.24 10:51:31
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.27.24 10:51:31
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.27.24 10:51:33
__main__.py choose_EA() INFO: Found the combo box for EAs 05.27.24 10:51:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:51:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:51:34
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:51:34
__main__.py choose_EA() INFO: Found combo box with title: martingale_bb_third.ex4 05.27.24 10:51:34
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.27.24 10:51:34
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.27.24 10:51:40
__main__.py choose_EA() INFO: Found the combo box for EAs 05.27.24 10:51:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 10:55:22
__main__.py is_application_running() INFO: Application is not running. 05.27.24 10:55:22
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 10:55:22
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 10:55:22
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 10:55:38
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 10:55:38
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 10:55:38
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 10:55:38
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 10:55:38
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:55:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:55:39
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:55:39
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 10:55:39
__main__.py choose_EA() INFO: Found the combo box for EAs 05.27.24 10:55:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 10:55:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 10:55:46
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 10:55:46
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 5640} 05.27.24 11:05:30
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:05:30
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:05:31
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:05:31
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.27.24 11:05:31
__main__.py choose_EA() INFO: Found the combo box for EAs 05.27.24 11:05:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 11:13:59
__main__.py is_application_running() INFO: Application is not running. 05.27.24 11:13:59
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 11:13:59
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 11:14:00
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 11:14:15
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 11:14:15
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 11:14:16
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 11:14:16
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 11:14:16
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:14:16
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:14:17
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:14:17
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 11:14:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:14:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:14:24
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:14:24
__main__.py main() ERROR: Exception occurred: cannot access local variable 'combo_boxes' where it is not associated with a value 05.27.24 11:14:29
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 11:17:41
__main__.py is_application_running() INFO: Application is not running. 05.27.24 11:17:42
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 11:17:42
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 11:17:42
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 11:17:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 11:17:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 11:17:58
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 11:17:58
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 11:17:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:17:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:17:59
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:17:59
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 11:17:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:18:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:18:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:18:06
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 12884} 05.27.24 11:19:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:19:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 11:27:29
__main__.py is_application_running() INFO: Application is not running. 05.27.24 11:27:29
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 11:27:29
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 11:27:30
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 11:27:45
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 11:27:45
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 11:27:46
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 11:27:46
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 11:27:46
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:27:46
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:27:47
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:27:47
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 11:27:47
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:27:48
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:27:53
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:27:53
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: ElementNotFoundError: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 3520} 05.27.24 11:27:58
__main__.py choose_EA() ERROR: Traceback: Traceback (most recent call last):
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 250, in __resolve_control
    ctrl = wait_until_passes(
           ^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\timings.py", line 458, in wait_until_passes
    raise err
pywinauto.timings.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Puja\Work\Coding\Python\For Poolsifi\Backtest Automater\gpt assisted code.py", line 183, in choose_EA
    combo_boxes = strategy_tester.children(class_name="ComboBox")
                  ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 379, in __getattribute__
    ctrls = self.__resolve_control(self.criteria)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 261, in __resolve_control
    raise e.original_exception
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\timings.py", line 436, in wait_until_passes
    func_val = func(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 203, in __get_ctrl
    dialog = self.backend.generic_wrapper_class(findwindows.find_element(**criteria[0]))
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\findwindows.py", line 87, in find_element
    raise ElementNotFoundError(kwargs)
pywinauto.findwindows.ElementNotFoundError: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 3520}
 05.27.24 11:27:58
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 11:31:39
__main__.py is_application_running() INFO: Application is not running. 05.27.24 11:31:39
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 11:31:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 11:31:40
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 11:31:56
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 11:31:56
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 11:31:56
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 11:31:56
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 11:31:56
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:31:56
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:31:57
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:31:57
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: ElementNotFoundError: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 7292} 05.27.24 11:32:12
__main__.py choose_EA() ERROR: Traceback: Traceback (most recent call last):
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 250, in __resolve_control
    ctrl = wait_until_passes(
           ^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\timings.py", line 458, in wait_until_passes
    raise err
pywinauto.timings.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Puja\Work\Coding\Python\For Poolsifi\Backtest Automater\gpt assisted code.py", line 184, in choose_EA
    combo_boxes = strategy_tester.children(class_name="ComboBox")
                  ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 379, in __getattribute__
    ctrls = self.__resolve_control(self.criteria)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 261, in __resolve_control
    raise e.original_exception
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\timings.py", line 436, in wait_until_passes
    func_val = func(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\application.py", line 203, in __get_ctrl
    dialog = self.backend.generic_wrapper_class(findwindows.find_element(**criteria[0]))
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Puja\.virtualenvs\Backtest_Automater-b-p9d7pC\Lib\site-packages\pywinauto\findwindows.py", line 87, in find_element
    raise ElementNotFoundError(kwargs)
pywinauto.findwindows.ElementNotFoundError: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 7292}
 05.27.24 11:32:12
__main__.py choose_EA() ERROR: Exception occurred while selecting the combo box: {'title_re': '.*Tradeview.*', 'backend': 'win32', 'enabled_only': False, 'visible_only': False, 'process': 7292} 05.27.24 11:32:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:32:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:32:24
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:32:24
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.27.24 11:32:34
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.27.24 11:32:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:32:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:32:36
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:32:36
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.27.24 11:32:47
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.27.24 11:32:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 11:39:41
__main__.py is_application_running() INFO: Application is not running. 05.27.24 11:39:42
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.27.24 11:39:42
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 11:39:42
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 11:39:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 11:39:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 11:39:58
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 11:39:58
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 11:39:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:39:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:39:59
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:40:28
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 11:40:39
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.27.24 11:40:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:40:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:40:43
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:40:49
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.27.24 11:41:00
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.27.24 11:41:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 11:41:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 11:41:07
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 11:43:48
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.27.24 11:43:58
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.27.24 11:43:58
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 12:01:24
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 12:01:24
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 12:01:24
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 12:01:24
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 12:01:24
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 12:01:24
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 12:01:24
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 12:01:24
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 12:01:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 12:01:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 12:01:25
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 12:01:25
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 12:01:25
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.27.24 12:01:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 12:01:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 12:01:30
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 12:01:30
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.27.24 12:01:30
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.27.24 12:01:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 12:01:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 12:01:33
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 12:01:33
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.27.24 12:01:33
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.27.24 12:01:39
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 12:51:42
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 12:51:43
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 12:51:43
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 12:51:43
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 12:51:43
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 12:51:43
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 12:51:43
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 12:51:43
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 12:51:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 12:51:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 12:51:44
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 13:03:18
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 13:03:18
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 13:03:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 13:03:18
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 13:03:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 13:03:18
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 13:03:18
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 13:03:18
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 13:03:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 13:03:27
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 13:03:28
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 13:03:28
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 13:03:29
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.27.24 13:03:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 17:04:21
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 17:04:21
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 17:04:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 17:04:21
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 17:04:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 17:04:21
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 17:04:21
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 17:04:21
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 17:04:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 17:04:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 17:04:22
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 17:04:22
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 17:04:22
__main__.py main() ERROR: Exception occurred: configure_expert_properties() missing 1 required positional argument: 'properties_string' 05.27.24 17:04:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 17:05:24
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 17:05:24
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 17:05:24
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 17:05:24
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 17:05:24
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 17:05:24
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 17:05:24
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 17:05:24
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 17:05:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 17:05:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 17:05:25
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 17:05:25
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 17:05:26
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.27.24 17:05:29
__main__.py main() ERROR: Exception occurred: configure_expert_properties() missing 1 required positional argument: 'properties_string' 05.27.24 17:05:29
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 17:08:48
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 17:08:48
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 17:08:48
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 17:08:48
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 17:08:48
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 17:08:48
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 17:08:48
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 17:08:48
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 17:08:48
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 17:08:48
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 17:08:49
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 17:08:49
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.27.24 17:08:49
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.27.24 17:08:55
__main__.py main() ERROR: Exception occurred: name 'get_ea_base_name' is not defined 05.27.24 17:08:55
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 17:46:29
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 17:46:29
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 17:46:29
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 17:46:29
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 17:46:29
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 17:46:29
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 17:46:30
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 17:46:30
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 17:46:30
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 17:47:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 17:47:23
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 17:47:23
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-WatsonNetting' 05.27.24 17:47:24
__main__.py main() ERROR: Exception occurred: timed out 05.27.24 17:47:44
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 17:57:23
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 17:57:24
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 17:57:24
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 17:57:24
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 17:57:24
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 17:57:24
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 17:57:24
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 17:57:24
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 17:57:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 17:57:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 17:57:25
__main__.py main() ERROR: Exception occurred: name 'remove_spaces_around_words' is not defined 05.27.24 17:57:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 18:00:01
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 18:00:01
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 18:00:01
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 18:00:01
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 18:00:01
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 18:00:01
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 18:00:01
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 18:00:01
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 18:00:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:00:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:00:02
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:00:02
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 18:00:02
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 18:00:02
__main__.py main() ERROR: Exception occurred: timed out 05.27.24 18:01:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 18:44:19
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 18:44:19
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 18:44:19
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 18:44:19
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 18:44:19
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 18:44:19
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 18:44:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 18:44:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 18:44:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:44:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:44:21
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:44:21
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 18:44:21
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 18:44:21
__main__.py main() ERROR: Exception occurred: timed out 05.27.24 18:44:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 18:44:57
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 18:44:57
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 18:44:57
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 18:44:57
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 18:44:57
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 18:44:57
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 18:44:57
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 18:44:57
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 18:44:57
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:44:57
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:44:58
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:44:58
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 18:44:58
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 18:44:58
__main__.py main() ERROR: Exception occurred: timed out 05.27.24 18:45:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 18:46:00
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 18:46:01
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 18:46:01
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 18:46:01
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 18:46:01
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 18:46:01
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 18:46:01
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 18:46:01
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 18:46:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:46:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:46:02
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:46:02
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 18:46:02
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 18:46:02
__main__.py main() ERROR: Exception occurred: timed out 05.27.24 18:46:08
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 18:46:20
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 18:46:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 18:46:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 18:46:20
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 18:46:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 18:46:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 18:46:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 18:46:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 18:46:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:46:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:46:22
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:46:22
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 18:46:22
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 18:46:22
__main__.py main() ERROR: Exception occurred: timed out 05.27.24 18:46:27
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 18:55:48
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 18:55:49
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 18:55:49
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 18:55:49
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 18:55:49
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 18:55:49
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 18:55:49
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 18:55:49
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 18:55:49
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:55:49
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:55:50
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:55:50
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 18:55:50
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 18:55:50
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 18:55:50
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 18:55:55
__main__.py main() ERROR: Exception occurred: timed out 05.27.24 18:55:55
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 18:58:29
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 18:58:29
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 18:58:29
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 18:58:29
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 18:58:29
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 18:58:29
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 18:58:29
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 18:58:29
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 18:58:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:58:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:58:31
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:58:31
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 18:58:31
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 18:58:31
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 18:58:31
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 18:58:36
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 18:58:36
__main__.py main() INFO: Continuing... 05.27.24 18:58:36
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:58:36
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:58:37
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:58:37
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 18:58:38
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 18:58:38
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 18:58:43
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 18:58:43
__main__.py main() INFO: Continuing... 05.27.24 18:58:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 18:58:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 18:58:44
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 18:58:44
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.27.24 18:58:44
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 18:58:45
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 18:58:50
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 18:58:50
__main__.py main() INFO: Continuing... 05.27.24 18:58:50
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:01:49
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:01:49
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:01:49
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:01:49
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:01:49
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:01:49
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:01:49
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:01:49
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:01:49
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:01:49
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:01:50
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:01:50
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:01:50
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:01:50
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 19:01:51
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 19:02:01
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 19:02:01
__main__.py main() INFO: Continuing... 05.27.24 19:02:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:02:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:02:02
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:02:02
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 19:02:03
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 19:02:03
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:06:25
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:06:25
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:06:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:06:25
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:06:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:06:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:06:25
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:06:25
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:06:25
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:06:25
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:06:27
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:06:27
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:06:27
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:06:27
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 19:06:27
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 19:06:32
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 19:06:32
__main__.py main() INFO: Continuing... 05.27.24 19:06:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:06:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:06:33
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:06:33
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 19:06:34
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 19:06:34
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 19:06:39
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 19:06:39
__main__.py main() INFO: Continuing... 05.27.24 19:06:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:06:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:06:40
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:06:40
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.27.24 19:06:40
__main__.py configure_expert_properties() INFO: Clicked on the Expert properties button. 05.27.24 19:06:41
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 19:06:46
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 19:06:46
__main__.py main() INFO: Continuing... 05.27.24 19:06:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:13:02
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:13:02
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:13:02
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:13:02
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:13:02
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:13:02
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:13:02
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:13:02
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:13:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:13:02
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:13:03
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:13:03
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:13:03
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:13:03
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 19:13:09
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 19:13:09
__main__.py main() INFO: Continuing... 05.27.24 19:13:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:13:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:13:10
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:13:10
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 19:13:10
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.27.24 19:13:16
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.27.24 19:13:16
__main__.py main() INFO: Continuing... 05.27.24 19:13:16
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:13:16
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:13:17
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:13:17
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.27.24 19:13:17
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:14:40
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:14:40
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:14:40
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:14:40
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:14:40
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:14:41
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:14:41
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:14:41
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:14:41
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:14:41
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:14:42
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:14:42
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:14:42
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:14:42
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:15:17
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:15:18
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:15:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:15:18
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:15:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:15:18
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:15:18
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:15:18
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:15:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:15:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:15:19
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:15:19
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:15:19
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:15:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:19:25
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:19:25
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:19:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:19:25
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:19:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:19:26
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:19:26
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:19:26
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:19:26
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:19:26
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:19:27
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:19:27
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:19:27
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:19:27
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:21:01
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:21:02
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:21:02
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:21:02
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:21:02
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:21:02
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:21:02
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:21:02
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:21:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:21:02
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:21:03
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:21:03
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:21:03
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:21:03
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:34:08
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:34:08
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:34:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:34:08
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:34:08
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:34:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:34:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:34:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:34:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:34:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:34:10
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:34:10
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:34:10
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:34:10
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:34:10
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:38:30
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:38:31
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:38:31
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:38:31
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:38:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:38:31
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:38:31
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:38:31
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:38:31
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:38:31
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:38:32
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:38:32
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:38:32
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:38:32
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:38:33
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:41:01
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:41:01
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:41:01
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:41:01
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:41:01
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:41:01
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:41:01
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:41:01
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:41:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:41:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:41:02
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:41:02
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:41:03
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:41:03
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:41:03
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:43:31
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:43:31
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:43:31
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:43:31
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:43:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:43:32
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:43:32
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:43:32
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:43:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:43:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:43:33
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:43:33
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:43:33
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:43:33
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:43:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:43:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:43:35
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:43:35
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 19:43:35
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:43:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:43:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:43:36
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:43:36
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.27.24 19:43:37
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:43:37
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:49:04
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:49:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:49:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:49:05
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:49:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:49:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:49:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:49:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:49:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:49:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:49:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:49:06
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:49:06
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:49:06
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:49:07
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:53:05
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:53:06
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:53:06
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:53:06
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:53:06
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:53:06
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:53:06
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:53:06
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:53:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:53:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:53:07
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:53:07
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:53:07
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:53:07
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:53:08
__main__.py configure_expert_properties() INFO: Expert properties window opened -> <pywinauto.application.WindowSpecification object at 0x06CA5150> 05.27.24 19:53:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:53:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:53:09
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:53:09
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 19:53:09
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:53:10
__main__.py configure_expert_properties() INFO: Expert properties window opened -> <pywinauto.application.WindowSpecification object at 0x06C736F0> 05.27.24 19:53:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:53:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:53:11
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:53:11
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.27.24 19:53:11
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:53:11
__main__.py configure_expert_properties() INFO: Expert properties window opened -> <pywinauto.application.WindowSpecification object at 0x07853798> 05.27.24 19:53:11
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:56:38
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:56:38
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:56:38
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:56:38
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:56:38
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:56:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:56:39
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:56:39
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:56:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:56:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:56:40
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:56:40
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:56:40
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:56:40
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:56:41
__main__.py wait_for_window() INFO: Waiting for window with title matching: Nadaraya-Watson Netting. 05.27.24 19:56:41
__main__.py wait_for_window() ERROR: Exception occurred while waiting for the window: timed out 05.27.24 19:56:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 19:59:17
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 19:59:17
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 19:59:17
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 19:59:17
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 19:59:17
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 19:59:17
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 19:59:17
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 19:59:17
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 19:59:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 19:59:17
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 19:59:19
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 19:59:19
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 19:59:19
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 19:59:19
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 19:59:19
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 19:59:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 20:01:08
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 20:01:08
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 20:01:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 20:01:08
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 20:01:08
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 20:01:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 20:01:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 20:01:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 20:01:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:01:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:01:10
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:01:10
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 20:01:10
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 20:01:10
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:01:10
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 20:01:10
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 20:03:19
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 20:03:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 20:03:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 20:03:20
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 20:03:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 20:03:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 20:03:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 20:03:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 20:03:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:03:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:03:21
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:03:21
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 20:03:21
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 20:03:21
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:03:22
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 20:03:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:03:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:03:23
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:03:23
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 20:03:23
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:03:23
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 20:03:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:03:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:03:25
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:03:25
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.27.24 20:03:25
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:03:25
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 20:03:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 20:04:17
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 20:04:17
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 20:04:17
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 20:04:17
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 20:04:17
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 20:04:17
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 20:04:17
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 20:04:17
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 20:04:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:04:17
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:04:18
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:04:18
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 20:04:19
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 20:04:19
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:04:19
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 20:04:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 20:08:17
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 20:08:17
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 20:08:17
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 20:08:17
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 20:08:17
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 20:08:17
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 20:08:17
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 20:08:17
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 20:08:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:08:17
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:08:19
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:08:19
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 20:08:19
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 20:08:19
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:08:19
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:08:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:08:25
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:08:25
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.27.24 20:08:25
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:08:25
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 20:08:30
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 20:08:31
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 20:08:31
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.27.24 20:08:31
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 20:08:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 21:04:28
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 21:04:28
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 21:04:28
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 21:04:28
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 21:04:28
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 21:04:28
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 21:04:28
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 21:04:28
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 21:04:28
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 21:04:28
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 21:04:29
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 21:04:29
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 21:04:30
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 21:04:30
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 21:25:23
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 21:25:23
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 21:25:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 21:25:23
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 21:25:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 21:25:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 21:25:23
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 21:25:23
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 21:25:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 21:25:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 21:25:25
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 21:25:25
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 21:25:25
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 21:25:25
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 21:25:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 22:16:38
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 22:16:39
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 22:16:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 22:16:39
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 22:16:39
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 22:16:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 22:16:39
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 22:16:39
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 22:16:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 22:16:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 22:16:40
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 22:16:40
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 22:16:40
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 22:16:40
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 22:16:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 22:23:53
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 22:23:54
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 22:23:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 22:23:54
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 22:23:54
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 22:23:54
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 22:23:54
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 22:23:54
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 22:23:54
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 22:23:54
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 22:23:55
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 22:23:55
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 22:23:55
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 22:23:55
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 22:23:56
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 22:23:56
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 22:45:32
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 22:45:32
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 22:45:32
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 22:45:32
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 22:45:32
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 22:45:32
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 22:45:32
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 22:45:32
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 22:45:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 22:45:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 22:45:33
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 22:45:33
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 22:45:33
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 22:45:33
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 22:45:34
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.27.24 22:45:34
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 22:45:59
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 22:45:59
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 22:45:59
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 22:45:59
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 22:45:59
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 22:45:59
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 22:45:59
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 22:45:59
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 22:45:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 22:45:59
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 22:46:00
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 22:46:00
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 22:46:01
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 22:46:01
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 22:46:01
__main__.py is_application_running() INFO: Checking if the application is already running. 05.27.24 22:46:19
__main__.py is_application_running() INFO: Application is already running with PID: 6312 05.27.24 22:46:20
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6312. 05.27.24 22:46:20
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.27.24 22:46:20
__main__.py wait_for_window() INFO: Window found and ready. 05.27.24 22:46:20
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.27.24 22:46:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.27.24 22:46:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.27.24 22:46:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.27.24 22:46:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.27.24 22:46:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.27.24 22:46:21
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.27.24 22:46:21
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.27.24 22:46:21
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.27.24 22:46:21
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.27.24 22:46:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 11:03:46
__main__.py is_application_running() INFO: Application is not running. 05.28.24 11:03:46
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.28.24 11:03:46
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 11:03:47
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 11:04:02
__main__.py main() ERROR: Exception occurred: (0, 'SetForegroundWindow', 'No error message is available') 05.28.24 11:04:02
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 11:04:30
__main__.py is_application_running() INFO: Application is not running. 05.28.24 11:04:30
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.28.24 11:04:30
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 11:04:30
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 11:04:43
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 11:04:43
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 11:04:43
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 11:04:43
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 11:04:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 11:04:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 11:04:44
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 11:04:44
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 11:04:44
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 11:04:44
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 11:04:45
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 11:04:45
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'DialogWrapper' object has no attribute 'child_window' 05.28.24 11:04:45
__main__.py main() ERROR: Exception occurred while configuring the EA: 'DialogWrapper' object has no attribute 'child_window' 05.28.24 11:04:45
__main__.py main() INFO: Continuing... 05.28.24 11:04:45
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 11:04:45
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 11:04:51
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 11:04:51
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 11:04:51
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 11:04:51
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 11:04:56
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 11:04:56
__main__.py main() INFO: Continuing... 05.28.24 11:04:56
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 11:04:56
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 11:04:58
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 11:04:58
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.28.24 11:04:58
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 11:04:58
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 11:05:03
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 11:05:03
__main__.py main() INFO: Continuing... 05.28.24 11:05:03
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 11:05:54
__main__.py is_application_running() INFO: Application is not running. 05.28.24 11:05:54
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.28.24 11:05:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 11:05:55
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 11:06:08
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 11:06:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 11:06:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 11:06:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 11:06:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 11:06:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 11:06:09
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 11:06:09
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 11:06:10
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 11:06:10
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 11:06:10
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 11:06:10
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'DialogWrapper' object has no attribute 'child_window' 05.28.24 11:08:21
__main__.py main() ERROR: Exception occurred while configuring the EA: 'DialogWrapper' object has no attribute 'child_window' 05.28.24 11:08:21
__main__.py main() INFO: Continuing... 05.28.24 11:08:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 11:08:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 11:08:22
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 11:08:22
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 11:08:22
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 11:08:23
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 11:13:15
__main__.py is_application_running() INFO: Application is not running. 05.28.24 11:13:15
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.28.24 11:13:15
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 11:13:16
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 11:13:29
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 11:13:29
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 11:13:29
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 11:13:29
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 11:13:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 11:13:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 11:13:30
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 11:13:30
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 11:13:30
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 11:13:30
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 11:13:31
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 11:13:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 11:59:37
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 11:59:37
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 11:59:37
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 11:59:37
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 11:59:37
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 11:59:38
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 11:59:38
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 11:59:38
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 11:59:38
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 11:59:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 11:59:39
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 11:59:39
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 11:59:39
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 11:59:39
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 11:59:40
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 11:59:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 12:23:44
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 12:23:45
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 12:23:45
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 12:23:45
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 12:23:45
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 12:23:45
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 12:23:45
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 12:23:45
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 12:23:45
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 12:23:45
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 12:23:46
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 12:23:46
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 12:23:46
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 12:23:46
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 12:23:47
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 12:23:47
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 12:26:03
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 12:26:04
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 12:26:04
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 12:26:04
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 12:26:04
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 12:26:04
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 12:26:04
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 12:26:04
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 12:26:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 12:26:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 12:26:05
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 12:26:05
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 12:26:05
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 12:26:05
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 12:26:06
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 12:26:06
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 12:31:39
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 12:31:39
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 12:31:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 12:31:39
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 12:31:39
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 12:31:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 12:31:39
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 12:31:39
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 12:31:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 12:31:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 12:31:40
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 12:31:40
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 12:31:41
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 12:31:41
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 12:31:41
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 12:31:41
__main__.py configure_expert_properties() INFO: [<hwndwrapper.HwndWrapper - 'Inputs', #32770, 6752064>, <common_controls.ListViewWrapper - 'List1', ListView, 2754606>, <common_controls.HeaderWrapper - '', Header, 7800326>, <win32_controls.EditWrapper - '', Edit, 7211192>, <win32_controls.EditWrapper - '', Edit, 3081782>, <win32_controls.ComboBoxWrapper - '', ComboBox, 10094414>, <win32_controls.ComboBoxWrapper - '', ComboBox, 5310192>, <win32_controls.ComboBoxWrapper - '', ComboBox, 2361372>, <win32_controls.EditWrapper - 'None', Edit, 5376052>, <common_controls.DateTimePickerWrapper - '2024.05.28 12:31:41', DateTimePicker, 3934408>, <win32_controls.ButtonWrapper - '&Load', Button, 2688572>, <win32_controls.ButtonWrapper - '&Save', Button, 5048390>, <hwndwrapper.HwndWrapper - 'Testing', #32770, 3475534>, <win32_controls.StaticWrapper - 'Initial deposit:', Static, 4327508>, <win32_controls.ComboBoxWrapper - '10000', ComboBox, 9503222>, <win32_controls.EditWrapper - '10000', Edit, 4131038>, <win32_controls.ComboBoxWrapper - 'USD', ComboBox, 6752298>, <win32_controls.EditWrapper - 'USD', Edit, 6490318>, <win32_controls.StaticWrapper - 'Positions:', Static, 12781002>, <win32_controls.ComboBoxWrapper - 'Long & Short', ComboBox, 18679974>, <win32_controls.ButtonWrapper - 'Optimization', GroupBox, 4654534>, <win32_controls.StaticWrapper - 'Optimized parameter:', Static, 2229324>, <win32_controls.ComboBoxWrapper - 'Balance', ComboBox, 6817546>, <win32_controls.ButtonWrapper - 'Genetic algorithm', CheckBox, 1311436>, <hwndwrapper.HwndWrapper - '', ScrollBar, 4655196>, <win32_controls.ButtonWrapper - 'OK', Button, 5177508>, <win32_controls.ButtonWrapper - 'Cancel', Button, 3605948>, <win32_controls.ButtonWrapper - 'Reset', Button, 4065410>, <win32_controls.ButtonWrapper - 'Help', Button, 4524096>, <common_controls.TabControlWrapper - '', TabControl, 2492506>] 05.28.24 12:31:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 12:53:28
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 12:53:29
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 12:53:29
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 12:53:29
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 12:53:29
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 12:53:29
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 12:53:29
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 12:53:29
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 12:53:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 12:53:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 12:53:30
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 12:53:30
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 12:53:30
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 12:53:30
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 12:53:31
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 12:53:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 15:08:22
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 15:08:22
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 15:08:22
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 15:08:22
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 15:08:22
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 15:08:22
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 15:08:22
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 15:08:22
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 15:08:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 15:08:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 15:08:23
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 15:08:23
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 15:08:24
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 15:08:24
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 15:08:24
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 15:08:24
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 15:23:44
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 15:23:45
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 15:23:45
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 15:23:45
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 15:23:45
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 15:23:45
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 15:23:45
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 15:23:45
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 15:23:45
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 15:23:45
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 15:23:46
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 15:23:46
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 15:23:46
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 15:23:46
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 15:23:47
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 15:23:47
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 15:29:04
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 15:29:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 15:29:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 15:29:05
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 15:29:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 15:29:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 15:29:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 15:29:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 15:29:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 15:29:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 15:29:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 15:29:06
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 15:29:06
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 15:29:06
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 15:29:07
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 15:29:07
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 15:32:37
__main__.py is_application_running() INFO: Application is already running with PID: 16152 05.28.24 15:32:37
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 16152. 05.28.24 15:32:37
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 15:32:37
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 15:32:37
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 15:32:37
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 15:32:37
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 15:32:37
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 15:32:37
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 15:32:37
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 15:32:39
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 15:32:39
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 15:32:39
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 15:32:39
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 15:32:39
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 15:32:39
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 19:12:31
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 19:12:31
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 19:12:31
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 19:12:31
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 19:12:31
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 19:12:31
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 19:12:31
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 19:12:31
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 19:12:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:12:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:12:33
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:12:33
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 19:12:33
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 19:12:33
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:12:33
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 19:12:33
__main__.py configure_expert_properties() INFO: Setting property Allow Cut off to False. 05.28.24 19:12:52
__main__.py configure_expert_properties() INFO: Setting property Allow Netting to False. 05.28.24 19:13:01
__main__.py configure_expert_properties() INFO: Setting property Initial lotsize to 0.02. 05.28.24 19:13:04
__main__.py configure_expert_properties() INFO: Setting property Start Time to 4. 05.28.24 19:13:07
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window. 05.28.24 19:13:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:13:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:13:08
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:13:08
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 19:13:08
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:13:09
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 19:13:14
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 19:13:14
__main__.py main() INFO: Continuing... 05.28.24 19:13:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:13:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:13:15
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:13:15
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.28.24 19:13:15
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:13:16
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 19:13:21
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 19:13:21
__main__.py main() INFO: Continuing... 05.28.24 19:13:21
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 19:53:58
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 19:53:58
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 19:53:58
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 19:53:58
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 19:53:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 19:53:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 19:53:58
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 19:53:58
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 19:53:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:53:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:53:59
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:53:59
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 19:53:59
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 19:53:59
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:54:00
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 19:54:00
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: Neither GUI element (wrapper) nor wrapper method 'get_focus' were found (typo?) 05.28.24 19:54:04
__main__.py main() ERROR: Exception occurred while configuring the EA: Neither GUI element (wrapper) nor wrapper method 'get_focus' were found (typo?) 05.28.24 19:54:04
__main__.py main() INFO: Continuing... 05.28.24 19:54:04
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:54:04
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:54:05
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:54:05
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 19:54:06
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:54:07
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 19:54:12
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 19:54:12
__main__.py main() INFO: Continuing... 05.28.24 19:54:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:54:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:54:13
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:54:13
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.28.24 19:54:13
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:54:14
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 19:54:19
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 19:54:19
__main__.py main() INFO: Continuing... 05.28.24 19:54:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 19:54:51
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 19:54:51
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 19:54:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 19:54:51
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 19:54:51
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 19:54:51
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 19:54:51
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 19:54:51
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 19:54:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:54:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:54:52
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:54:52
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 19:54:52
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 19:54:52
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:54:53
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 19:54:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 19:56:07
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 19:56:08
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 19:56:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 19:56:08
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 19:56:08
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 19:56:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 19:56:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 19:56:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 19:56:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 19:56:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 19:56:09
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 19:56:09
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 19:56:09
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 19:56:09
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 19:56:10
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 19:56:10
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 20:01:19
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 20:01:19
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 20:01:19
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 20:01:19
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 20:01:19
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 20:01:20
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 20:01:20
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 20:01:20
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 20:01:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:01:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:01:21
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:01:21
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 20:01:21
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 20:01:21
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:01:22
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 20:01:22
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 20:21:52
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 20:21:52
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 20:21:52
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 20:21:52
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 20:21:52
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 20:21:52
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 20:21:52
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 20:21:52
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 20:21:52
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:21:52
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:21:53
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:21:53
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 20:21:53
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 20:21:53
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:21:54
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 20:21:54
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 20:23:12
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 20:23:12
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 20:23:12
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 20:23:12
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 20:23:12
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 20:23:12
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 20:23:12
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 20:23:12
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 20:23:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:23:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:23:13
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:23:13
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 20:23:13
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 20:23:13
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:23:14
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 20:23:14
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 20:32:00
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 20:32:00
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 20:32:00
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 20:32:00
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 20:32:00
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 20:32:00
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 20:32:00
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 20:32:00
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 20:32:00
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:32:00
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:32:01
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:32:01
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 20:32:02
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 20:32:02
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:32:02
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 20:32:02
__main__.py configure_expert_properties() INFO: Setting property Allow Cut off to False. 05.28.24 20:32:05
__main__.py configure_expert_properties() INFO: Setting property Allow Netting to False. 05.28.24 20:32:05
__main__.py configure_expert_properties() INFO: Setting property Initial lotsize to 0.02. 05.28.24 20:32:05
__main__.py configure_expert_properties() INFO: Setting property Start Time to 4. 05.28.24 20:32:05
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window. 05.28.24 20:32:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:32:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:32:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:32:06
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 20:32:07
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:32:07
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 20:32:46
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 20:32:46
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 20:32:46
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 20:32:46
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 20:32:46
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 20:32:46
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 20:32:46
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 20:32:46
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 20:32:46
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:32:46
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:32:47
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:32:47
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 20:32:48
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 20:32:48
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:32:48
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 20:32:48
__main__.py configure_expert_properties() INFO: Setting property Allow Cut off to False. 05.28.24 20:32:51
__main__.py configure_expert_properties() INFO: Setting property Allow Netting to False. 05.28.24 20:32:51
__main__.py configure_expert_properties() INFO: Setting property Initial lotsize to 0.02. 05.28.24 20:32:51
__main__.py configure_expert_properties() INFO: Setting property Start Time to 4. 05.28.24 20:32:51
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window. 05.28.24 20:32:51
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:32:51
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:32:52
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:32:52
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 20:32:53
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:32:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 20:37:36
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 20:37:36
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 20:37:36
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 20:37:36
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 20:37:36
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 20:37:36
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 20:37:36
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 20:37:36
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 20:37:36
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:37:36
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:37:37
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:37:37
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 20:37:37
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 20:37:37
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:37:38
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 20:37:38
__main__.py configure_expert_properties() INFO: Setting property Allow Cut off to False. 05.28.24 20:37:41
__main__.py configure_expert_properties() INFO: Setting property Allow Netting to False. 05.28.24 20:37:41
__main__.py configure_expert_properties() INFO: Setting property Initial lotsize to 0.02. 05.28.24 20:37:41
__main__.py configure_expert_properties() INFO: Setting property Start Time to 4. 05.28.24 20:37:41
__main__.py configure_expert_properties() INFO: Confirmed the changes and closed the Expert properties window. 05.28.24 20:37:41
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 20:37:41
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 20:37:42
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 20:37:42
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 20:37:42
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 20:37:43
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 21:01:42
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 21:01:42
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 21:01:42
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 21:01:42
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 21:01:42
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 21:01:42
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 21:01:42
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 21:01:42
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 21:01:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 21:01:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 21:01:43
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 21:01:43
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 21:01:44
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 21:01:44
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 21:01:44
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 21:01:44
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 21:02:39
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 21:02:39
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 21:02:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 21:02:39
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 21:02:39
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 21:02:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 21:02:39
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 21:02:39
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 21:02:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 21:02:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 21:02:40
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 21:02:40
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 21:02:41
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 21:02:41
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 21:02:41
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 21:02:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 21:02:53
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 21:02:53
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 21:02:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 21:02:53
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 21:02:53
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 21:02:54
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 21:02:54
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 21:02:54
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 21:02:54
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 21:02:54
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 21:02:55
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 21:02:55
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 21:02:55
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 21:02:55
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 21:02:55
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 21:02:56
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 21:10:29
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 21:10:30
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 21:10:30
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 21:10:30
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 21:10:30
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 21:10:30
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 21:10:30
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 21:10:30
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 21:10:30
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 21:10:30
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 21:10:31
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 21:10:31
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 21:10:31
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 21:10:31
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 21:10:32
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 21:10:32
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 21:15:05
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 21:15:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 21:15:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 21:15:05
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 21:15:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 21:15:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 21:15:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 21:15:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 21:15:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 21:15:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 21:15:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 21:15:06
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 21:15:06
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 21:15:06
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 21:15:07
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 21:15:07
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 21:20:42
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 21:20:42
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 21:20:42
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 21:20:42
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 21:20:42
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 21:20:42
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 21:20:42
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 21:20:42
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 21:20:42
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 21:20:42
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 21:20:43
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 21:20:43
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 21:20:44
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 21:20:44
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 21:20:44
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.28.24 21:20:44
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 23:37:58
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 23:37:58
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 23:37:58
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 23:37:58
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 23:37:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 23:37:59
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 23:37:59
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 23:37:59
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 23:37:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:37:59
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:38:00
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:38:00
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 23:38:00
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 23:38:00
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:38:00
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 23:38:05
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 23:38:05
__main__.py main() INFO: Continuing... 05.28.24 23:38:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:38:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:38:07
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:38:07
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 23:38:07
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:38:07
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 23:38:33
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 23:38:33
__main__.py main() INFO: Continuing... 05.28.24 23:38:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:38:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:38:34
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:38:34
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.28.24 23:38:34
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:38:35
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 23:38:40
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 23:38:40
__main__.py main() INFO: Continuing... 05.28.24 23:38:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 23:38:58
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 23:38:58
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 23:38:58
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 23:38:58
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 23:38:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 23:38:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 23:38:58
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 23:38:58
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 23:38:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:38:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:39:00
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:39:00
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 23:39:00
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 23:39:00
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:39:00
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 23:39:05
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 23:39:05
__main__.py main() INFO: Continuing... 05.28.24 23:39:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:39:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:39:06
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:39:06
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third' 05.28.24 23:39:07
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:39:08
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 23:39:13
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 23:39:13
__main__.py main() INFO: Continuing... 05.28.24 23:39:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:39:13
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:39:14
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:39:14
__main__.py choose_EA() INFO: Navigating through options to find 'ao_swing_fib_ret_bo' 05.28.24 23:39:14
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:39:15
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.28.24 23:39:20
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.28.24 23:39:20
__main__.py main() INFO: Continuing... 05.28.24 23:39:20
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 23:39:51
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 23:39:51
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 23:39:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 23:39:51
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 23:39:51
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 23:39:52
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 23:39:52
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 23:39:52
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 23:39:52
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:39:52
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:39:53
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:39:53
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 23:39:53
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 23:39:53
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:39:54
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 23:40:09
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 23:40:09
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 23:40:09
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 23:40:09
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 23:40:09
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 23:40:09
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 23:40:09
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 23:40:09
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 23:40:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:40:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:40:10
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:40:10
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 23:40:10
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 23:40:10
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:40:11
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 23:40:57
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 23:40:58
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 23:40:58
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 23:40:58
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 23:40:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 23:40:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 23:40:58
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 23:40:58
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 23:40:58
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:40:58
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:40:59
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:40:59
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 23:40:59
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson Netting' in the options. 05.28.24 23:40:59
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.28.24 23:40:59
__main__.py is_application_running() INFO: Checking if the application is already running. 05.28.24 23:42:53
__main__.py is_application_running() INFO: Application is already running with PID: 3016 05.28.24 23:42:53
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 3016. 05.28.24 23:42:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.28.24 23:42:53
__main__.py wait_for_window() INFO: Window found and ready. 05.28.24 23:42:53
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.28.24 23:42:54
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.28.24 23:42:54
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.28.24 23:42:54
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.28.24 23:42:54
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.28.24 23:42:54
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.28.24 23:42:55
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.28.24 23:42:55
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson Netting' 05.28.24 23:42:55
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 13:01:58
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 13:01:58
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 13:01:58
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 13:01:58
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 13:01:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 13:01:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 13:01:59
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 13:01:59
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 13:01:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 13:01:59
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 13:02:00
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 13:02:00
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 13:02:00
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 13:02:00
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 05.29.24 13:02:00
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 13:03:23
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 13:03:23
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 13:03:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 13:03:23
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 13:03:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 13:03:23
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 13:03:23
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 13:03:23
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 13:03:23
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 13:03:23
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 13:03:25
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 13:03:25
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 13:03:25
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 13:03:25
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 05.29.24 13:03:25
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 13:09:03
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 13:09:03
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 13:09:03
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 13:09:03
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 13:09:03
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 13:09:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 13:09:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 13:09:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 13:09:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 13:09:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 13:09:04
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 13:09:04
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 13:09:05
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 13:15:39
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 13:15:39
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 13:15:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 13:15:40
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 13:15:40
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 13:15:40
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 13:15:40
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 13:15:40
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 13:15:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 13:15:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 13:15:41
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 13:15:41
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 13:15:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 13:22:44
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 13:22:44
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 13:22:44
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 13:22:44
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 13:22:44
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 13:22:44
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 13:22:44
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 13:22:44
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 13:22:44
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 13:22:44
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 13:22:45
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 13:22:45
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 13:22:46
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 13:23:54
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 13:23:54
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 13:23:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 13:23:54
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 13:23:54
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 13:23:54
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 13:23:55
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 13:23:55
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 13:23:55
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 13:23:55
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 13:23:56
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 13:23:56
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 13:23:56
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 13:23:58
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 13:23:58
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 05.29.24 13:23:58
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.29.24 13:23:59
__main__.py configure_expert_properties() INFO: Setting property Allow Cut off to False. 05.29.24 13:24:01
__main__.py configure_expert_properties() INFO: Setting property Allow Netting to False. 05.29.24 13:24:01
__main__.py configure_expert_properties() INFO: Setting property Initial lotsize to 0.02. 05.29.24 13:24:01
__main__.py configure_expert_properties() INFO: Setting property Start Time to 4. 05.29.24 13:24:01
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 15:05:34
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 15:05:35
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 15:05:35
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 15:05:35
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 15:05:35
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 15:05:35
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 15:05:35
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 15:05:35
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 15:05:35
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:05:35
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:05:36
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:05:36
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 15:05:36
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 15:05:36
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:05:37
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 05.29.24 15:05:37
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.29.24 15:05:37
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'DialogWrapper' object has no attribute 'wrapper_object' 05.29.24 15:05:39
__main__.py main() ERROR: Exception occurred while configuring the EA: 'DialogWrapper' object has no attribute 'wrapper_object' 05.29.24 15:05:39
__main__.py main() INFO: Continuing... 05.29.24 15:05:39
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:05:39
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:05:40
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:05:40
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 15:05:40
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:05:41
__main__.py ea_base_name() INFO: Converted 'martingale_bb_third.ex4' to 'martingale_bb_third.ex4' 05.29.24 15:05:41
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.29.24 15:05:46
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.29.24 15:05:46
__main__.py main() INFO: Continuing... 05.29.24 15:05:46
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:05:46
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:05:47
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:05:47
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.29.24 15:05:47
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:05:48
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.29.24 15:05:48
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.29.24 15:05:53
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.29.24 15:05:53
__main__.py main() INFO: Continuing... 05.29.24 15:05:53
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 15:06:54
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 15:06:54
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 15:06:54
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 15:06:54
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 15:06:54
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 15:06:55
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 15:06:55
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 15:06:55
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 15:06:55
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:06:55
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:06:56
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:06:56
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 15:06:56
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 15:06:56
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:06:57
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 05.29.24 15:06:57
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.29.24 15:06:57
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: 'DialogWrapper' object has no attribute 'wrapper_object' 05.29.24 15:06:59
__main__.py main() ERROR: Exception occurred while configuring the EA: 'DialogWrapper' object has no attribute 'wrapper_object' 05.29.24 15:06:59
__main__.py main() INFO: Continuing... 05.29.24 15:06:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:06:59
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:07:00
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:07:00
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 15:07:00
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:07:01
__main__.py ea_base_name() INFO: Converted 'martingale_bb_third.ex4' to 'martingale_bb_third.ex4' 05.29.24 15:07:01
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.29.24 15:07:06
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.29.24 15:07:06
__main__.py main() INFO: Continuing... 05.29.24 15:07:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:07:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:07:07
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:07:07
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.29.24 15:07:07
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:07:08
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.29.24 15:07:08
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.29.24 15:07:13
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.29.24 15:07:13
__main__.py main() INFO: Continuing... 05.29.24 15:07:13
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 15:08:09
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 15:08:10
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 15:08:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 15:08:10
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 15:08:10
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 15:08:10
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 15:08:10
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 15:08:10
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 15:08:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:08:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:08:11
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:08:11
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 15:08:11
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 15:08:11
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:08:11
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 05.29.24 15:08:11
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.29.24 15:08:11
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties:  05.29.24 15:08:12
__main__.py main() ERROR: Exception occurred while configuring the EA:  05.29.24 15:08:12
__main__.py main() INFO: Continuing... 05.29.24 15:08:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:08:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:08:14
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:08:14
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 15:08:14
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.29.24 15:08:16
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:08:16
__main__.py ea_base_name() INFO: Converted 'martingale_bb_third.ex4' to 'martingale_bb_third.ex4' 05.29.24 15:08:16
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.29.24 15:08:21
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.29.24 15:08:21
__main__.py main() INFO: Continuing... 05.29.24 15:08:21
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:08:21
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:08:22
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:08:22
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.29.24 15:08:23
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:08:23
__main__.py ea_base_name() INFO: Converted 'Fib retracement\ao_swing_fib_ret_bo.ex4' to 'ao_swing_fib_ret_bo' 05.29.24 15:08:23
__main__.py configure_expert_properties() ERROR: An error occurred while configuring expert properties: timed out 05.29.24 15:08:29
__main__.py main() ERROR: Exception occurred while configuring the EA: timed out 05.29.24 15:08:29
__main__.py main() INFO: Continuing... 05.29.24 15:08:29
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 15:09:12
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 15:09:12
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 15:09:12
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 15:09:12
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 15:09:12
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 15:09:12
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 15:09:13
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 15:09:13
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 15:09:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 15:09:13
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 15:09:14
__main__.py choose_EA() INFO: Searching for combo boxes with 'ex4' or 'ex5' in the title... 05.29.24 15:09:14
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 15:09:14
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 15:09:18
__main__.py configure_expert_properties() INFO: Clicked on Expert properties button 05.29.24 15:09:18
__main__.py ea_base_name() INFO: Converted 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' to 'Nadaraya-Watson Netting' 05.29.24 15:09:18
__main__.py configure_expert_properties() INFO: Expert properties window opened 05.29.24 15:09:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 18:00:18
__main__.py is_application_running() INFO: Application is already running with PID: 6224 05.29.24 18:00:19
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 6224. 05.29.24 18:00:19
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 18:00:19
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 18:00:19
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:00:19
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 18:00:19
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 18:00:19
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 18:00:19
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:00:19
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:00:20
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:00:20
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 18:00:20
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 18:00:20
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:00:20
__main__.py choose_symbol() ERROR: It is likely that "EURUSD" has already been chosen 05.29.24 18:00:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:00:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:00:22
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:00:22
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 18:00:22
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.29.24 18:00:24
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:00:24
__main__.py choose_symbol() ERROR: It is likely that "GBPJPY" has already been chosen 05.29.24 18:00:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:00:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:00:25
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:00:25
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.29.24 18:00:25
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.29.24 18:00:31
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:00:31
__main__.py choose_symbol() ERROR: It is likely that "EURUSD" has already been chosen 05.29.24 18:00:31
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 18:03:59
__main__.py is_application_running() INFO: Application is not running. 05.29.24 18:04:00
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.29.24 18:04:00
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 18:04:00
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 18:04:16
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:04:16
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.29.24 18:04:26
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.29.24 18:04:26
__main__.py main() ERROR: Exception occurred: Neither GUI element (wrapper) nor wrapper method 'send_keys' were found (typo?) 05.29.24 18:04:26
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 18:10:51
__main__.py is_application_running() INFO: Application is not running. 05.29.24 18:10:51
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.29.24 18:10:51
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 18:10:52
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 18:11:07
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:11:08
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.29.24 18:11:18
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.29.24 18:11:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:11:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 18:11:25
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 18:11:25
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 18:11:25
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:11:25
__main__.py select_expert_advisor() INFO: Changing the value of 'Indicator' combo box to 'Expert Advisor'. 05.29.24 18:11:25
__main__.py select_expert_advisor() INFO: Successfully changed the value to 'Expert Advisor'. 05.29.24 18:11:25
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:11:25
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 18:11:25
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 18:11:29
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:11:29
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol 05.29.24 18:11:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:11:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:11:30
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:11:30
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 18:11:30
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.29.24 18:11:32
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:11:32
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol 05.29.24 18:11:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:11:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:11:33
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:11:33
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.29.24 18:11:33
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.29.24 18:11:39
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:11:39
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol 05.29.24 18:11:39
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 18:13:10
__main__.py is_application_running() INFO: Application is not running. 05.29.24 18:13:10
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.29.24 18:13:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 18:13:11
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 18:13:26
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:13:26
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.29.24 18:13:36
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.29.24 18:13:36
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:13:43
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 18:13:43
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 18:13:43
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 18:13:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:13:43
__main__.py select_expert_advisor() INFO: Changing the value of 'Indicator' combo box to 'Expert Advisor'. 05.29.24 18:13:43
__main__.py select_expert_advisor() INFO: Successfully changed the value to 'Expert Advisor'. 05.29.24 18:13:43
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:13:43
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 18:13:43
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 18:13:47
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:13:47
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 18:15:41
__main__.py is_application_running() INFO: Application is not running. 05.29.24 18:15:41
__main__.py start_or_connect_application() INFO: Starting the application from path: C:\Program Files (x86)\Tradeview MetaTrader 4 Terminal\terminal.exe. 05.29.24 18:15:41
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 18:15:42
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 18:15:57
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:15:57
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.29.24 18:16:07
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.29.24 18:16:07
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:16:15
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 18:16:15
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 18:16:15
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 18:16:15
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:16:15
__main__.py select_expert_advisor() INFO: Changing the value of 'Indicator' combo box to 'Expert Advisor'. 05.29.24 18:16:15
__main__.py select_expert_advisor() INFO: Successfully changed the value to 'Expert Advisor'. 05.29.24 18:16:15
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:16:15
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 18:16:15
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 18:16:19
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:16:19
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 18:16:19
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 18:56:11
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 18:56:11
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 18:56:11
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 18:56:11
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 18:56:11
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 18:56:11
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 18:56:11
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 18:56:11
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 18:56:11
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:56:11
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:56:12
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:56:12
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 18:56:12
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 18:56:16
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:56:16
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 18:56:16
__main__.py choose_symbol() INFO: Successfully changed the value to '{symbol}'. 05.29.24 18:56:17
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:56:17
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:56:18
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:56:18
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 18:56:18
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.29.24 18:56:20
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:56:20
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 18:56:20
__main__.py choose_symbol() INFO: Successfully changed the value to '{symbol}'. 05.29.24 18:56:20
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 18:56:20
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 18:56:21
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 18:56:21
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.29.24 18:56:22
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.29.24 18:56:28
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 18:56:28
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 18:56:28
__main__.py choose_symbol() INFO: Successfully changed the value to '{symbol}'. 05.29.24 18:56:28
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:01:08
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:01:08
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:01:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:01:08
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:01:08
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:01:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:01:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:01:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:01:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:01:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:01:09
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:01:09
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:01:10
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:01:12
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:01:12
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 19:01:12
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:05:33
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:05:33
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:05:33
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:05:33
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:05:33
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:05:34
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:05:34
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:05:34
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:05:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:05:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:05:35
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:05:35
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:05:35
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:05:35
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:05:35
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 19:05:35
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:06:02
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:06:02
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:06:02
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:06:02
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:06:02
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:06:03
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:06:03
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:06:03
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:06:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:06:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:06:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:06:04
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:06:04
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:06:04
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:06:04
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 19:06:04
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:06:39
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:06:39
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:06:39
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:06:39
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:06:39
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:06:39
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:06:40
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:06:40
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:06:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:06:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:06:41
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:06:41
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:06:41
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:06:41
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:06:41
__main__.py choose_symbol() INFO: Found Symbol input in the Strategy Tester 05.29.24 19:06:41
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:07:40
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:07:40
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:07:40
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:07:40
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:07:40
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:07:40
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:07:40
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:07:40
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:07:41
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:07:41
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:07:42
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:07:42
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:07:42
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:07:42
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:07:42
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:08:55
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:08:55
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:08:55
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:08:55
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:08:55
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:08:55
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:08:55
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:08:55
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:08:55
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:08:55
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:08:56
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:08:56
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:08:56
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:08:56
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:08:56
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol 05.29.24 19:09:01
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:09:01
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:09:03
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:09:03
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 19:09:03
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.29.24 19:09:05
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:09:05
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol 05.29.24 19:09:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:09:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:09:11
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:09:11
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.29.24 19:09:11
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:09:17
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:12:04
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:12:04
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:12:04
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:12:04
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:12:04
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:12:04
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:12:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:12:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:12:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:12:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:12:06
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:12:06
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:12:06
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:12:08
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:12:08
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol 05.29.24 19:12:13
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:12:13
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:12:14
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:12:14
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 19:12:14
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.29.24 19:12:16
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:12:16
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:47:07
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:47:07
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:47:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:47:07
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:47:07
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:47:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:47:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:47:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:47:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:47:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:47:09
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:47:09
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:47:09
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:47:13
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:47:13
__main__.py choose_symbol() ERROR: Error has occurred when choosing the symbol: {'title': 'Symbol:', 'control_type': 'combo box', 'top_level_only': False, 'parent': <win32_element_info.HwndElementInfo - 'Tester', Afx:00DB0000:b:00010003:00000000:00000000, 5113560>, 'backend': 'win32'} 05.29.24 19:47:18
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:47:18
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:47:19
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:47:19
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.29.24 19:47:19
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.29.24 19:47:21
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:47:21
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:53:34
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:53:34
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:53:34
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:53:34
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:53:34
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:53:34
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:53:34
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:53:34
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:53:34
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:53:34
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:53:35
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:53:35
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:53:36
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:53:40
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:53:40
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:56:14
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:56:14
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:56:14
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:56:14
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:56:14
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:56:14
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:56:14
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:56:14
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:56:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:56:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:56:15
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:56:15
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:56:16
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:56:16
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:56:16
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 19:57:07
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 19:57:08
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 19:57:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 19:57:08
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 19:57:08
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 19:57:08
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 19:57:08
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 19:57:08
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 19:57:08
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 19:57:08
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 19:57:09
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 19:57:09
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 19:57:09
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 19:57:09
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 19:57:09
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 20:08:18
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 20:08:18
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 20:08:18
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 20:08:18
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 20:08:18
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 20:08:18
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 20:08:18
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 20:08:18
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 20:08:19
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 20:08:19
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 20:08:20
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 20:08:20
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 20:08:20
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 20:08:20
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 20:08:20
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 20:10:08
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 20:10:08
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 20:10:08
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 20:10:08
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 20:10:09
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 20:10:09
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 20:10:09
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 20:10:09
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 20:10:09
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 20:10:09
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 20:10:10
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 20:10:10
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 20:10:10
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 20:10:10
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 20:10:10
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 20:17:30
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 20:17:30
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 20:17:30
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 20:17:30
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 20:17:30
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 20:17:30
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 20:17:30
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 20:17:30
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 20:17:30
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 20:17:30
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 20:17:31
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 20:17:31
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 20:17:31
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 20:17:31
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 20:17:31
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.29.24 20:17:32
__main__.py is_application_running() INFO: Checking if the application is already running. 05.29.24 20:22:58
__main__.py is_application_running() INFO: Application is already running with PID: 1912 05.29.24 20:22:58
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 1912. 05.29.24 20:22:58
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.29.24 20:22:58
__main__.py wait_for_window() INFO: Window found and ready. 05.29.24 20:22:58
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.29.24 20:22:58
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.29.24 20:22:58
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.29.24 20:22:58
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.29.24 20:22:59
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.29.24 20:22:59
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.29.24 20:23:00
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.29.24 20:23:00
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.29.24 20:23:00
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.29.24 20:23:00
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.29.24 20:23:00
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.29.24 20:23:00
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:10:22
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:10:23
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:10:23
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:10:23
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:10:23
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:10:23
__main__.py is_strategy_tester_open() ERROR: Exception occurred while checking the Strategy Tester: timed out 05.30.24 11:10:28
__main__.py main() INFO: Strategy Tester is not open. Trying to open it. 05.30.24 11:10:28
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:10:33
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:10:33
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:10:33
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:10:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:10:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:10:34
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:10:34
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:10:35
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:10:35
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:10:35
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPDKK, Great Britan Pound vs Danish Krone', ComboBox 05.30.24 11:10:35
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:34:40
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:34:40
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:34:40
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:34:40
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:34:40
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:34:40
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:34:40
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:34:40
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:34:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:34:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:34:42
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:34:42
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:34:42
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:34:42
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:34:42
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPDKK, Great Britan Pound vs Danish Krone', ComboBox 05.30.24 11:34:42
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:35:32
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:35:33
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:35:33
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:35:33
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:35:33
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:35:33
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:35:33
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:35:33
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:35:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:35:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:35:34
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:35:34
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:35:34
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:35:34
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:35:34
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPDKK, Great Britan Pound vs Danish Krone', ComboBox 05.30.24 11:35:34
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:46:10
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:46:10
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:46:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:46:10
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:46:10
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:46:10
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:46:10
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:46:10
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:46:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:46:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:46:12
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:46:12
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:46:12
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:46:12
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:46:12
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPDKK, Great Britan Pound vs Danish Krone', ComboBox 05.30.24 11:46:12
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:46:12
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:46:13
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:46:13
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 11:46:14
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:46:14
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPSEK, Great Britan Pound vs Swedish Krona', ComboBox 05.30.24 11:46:14
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:46:14
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:46:15
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:46:15
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 11:46:15
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:46:16
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:46:38
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:46:38
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:46:38
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:46:38
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:46:38
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:46:38
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:46:38
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:46:38
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:46:38
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:46:38
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:46:40
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:46:40
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:46:40
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:46:40
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:46:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:46:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:46:41
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:46:41
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 11:46:41
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.30.24 11:46:43
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:46:43
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:46:43
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:46:44
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:46:44
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 11:46:44
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.30.24 11:46:50
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:46:50
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:47:25
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:47:25
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:47:25
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:47:25
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:47:25
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:47:25
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:47:26
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:47:26
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:47:26
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:47:26
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:47:27
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:47:27
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:47:27
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:47:29
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:47:29
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:47:29
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:47:30
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:47:30
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 11:47:30
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.30.24 11:47:32
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:47:32
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:47:32
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:47:33
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:47:33
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 11:47:33
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:47:34
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:53:40
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:53:40
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:53:40
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:53:40
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:53:40
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:53:40
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:53:40
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:53:40
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:53:40
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:53:40
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:53:41
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:53:41
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:53:41
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:53:45
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:53:45
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'NOKSEK, NOK SEK', ComboBox 05.30.24 11:53:45
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:53:46
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:53:47
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:53:47
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 11:53:47
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:53:47
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'GBPSEK, Great Britan Pound vs Swedish Krona', ComboBox 05.30.24 11:53:47
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:53:48
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:53:49
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:53:49
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 11:53:49
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:53:49
__main__.py choose_symbol() INFO: found symbol input: win32_controls.ComboBoxWrapper - 'NOKSEK, NOK SEK', ComboBox 05.30.24 11:53:49
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 11:57:53
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 11:57:53
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 11:57:53
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 11:57:53
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 11:57:53
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 11:57:53
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 11:57:53
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 11:57:53
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 11:57:53
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 11:57:53
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 11:57:55
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 11:57:55
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 11:57:55
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 11:57:55
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 11:57:55
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 11:57:55
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.30.24 11:57:55
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 12:00:07
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 12:00:07
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 12:00:07
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 12:00:07
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 12:00:07
__main__.py main() ERROR: Exception occurred: (0, 'SetForegroundWindow', 'No error message is available') 05.30.24 12:00:07
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 12:00:24
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 12:00:24
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 12:00:24
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 12:00:24
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 12:00:24
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 12:00:24
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 12:00:24
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 12:00:24
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 12:00:24
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:00:24
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:00:25
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:00:25
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 12:00:25
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 12:00:26
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:00:26
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.30.24 12:00:26
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.30.24 12:00:27
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:01:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:01:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:01:04
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 12:01:04
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.30.24 12:01:06
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:01:06
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 12:01:06
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.30.24 12:01:06
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:01:06
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:01:08
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:01:08
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 12:01:08
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.30.24 12:01:14
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:01:14
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.30.24 12:01:14
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.30.24 12:01:14
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 12:52:10
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 12:52:10
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 12:52:10
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 12:52:10
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 12:52:10
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 12:52:10
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 12:52:10
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 12:52:10
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 12:52:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:52:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:52:12
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:52:12
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 12:52:12
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 12:52:12
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:52:12
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 12:52:12
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.30.24 12:52:12
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 12:52:12
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 12:57:21
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 12:57:21
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 12:57:21
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 12:57:21
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 12:57:21
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 12:57:22
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 12:57:22
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 12:57:22
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 12:57:22
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:57:22
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:57:23
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:57:23
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 12:57:23
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 12:57:23
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:57:23
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 12:57:23
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.30.24 12:57:23
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 12:57:23
__main__.py main() ERROR: Failed to select period 'M1'. Continuing. 05.30.24 12:58:02
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:58:02
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:58:03
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:58:03
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 12:58:03
__main__.py main() ERROR: Failed to select EA 'martingale_bb_third.ex4'. Continuing. 05.30.24 12:58:03
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:58:03
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:58:04
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:58:04
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 12:58:04
__main__.py main() ERROR: Failed to select EA 'Fib retracement\ao_swing_fib_ret_bo.ex4'. Continuing. 05.30.24 12:58:05
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 12:59:05
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 12:59:05
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 12:59:05
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 12:59:05
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 12:59:05
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 12:59:05
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 12:59:05
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 12:59:05
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 12:59:05
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:59:05
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:59:06
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:59:06
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 12:59:07
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 12:59:07
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:59:07
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 12:59:07
__main__.py choose_symbol() INFO: EURUSD has already been selected. 05.30.24 12:59:07
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 12:59:07
__main__.py main() ERROR: Failed to select period 'M1'. Continuing. 05.30.24 12:59:07
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:59:07
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:59:08
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:59:08
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 12:59:08
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.30.24 12:59:10
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:59:10
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 12:59:10
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.30.24 12:59:10
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 12:59:10
__main__.py main() ERROR: Failed to select period 'H4'. Continuing. 05.30.24 12:59:10
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 12:59:10
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 12:59:12
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 12:59:12
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 12:59:12
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.30.24 12:59:18
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 12:59:18
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.30.24 12:59:18
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.30.24 12:59:18
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 12:59:18
__main__.py main() ERROR: Failed to select period 'M5'. Continuing. 05.30.24 12:59:18
__main__.py is_application_running() INFO: Checking if the application is already running. 05.30.24 13:26:33
__main__.py is_application_running() INFO: Application is already running with PID: 2248 05.30.24 13:26:33
__main__.py start_or_connect_application() INFO: Connecting to the running instance with PID: 2248. 05.30.24 13:26:33
__main__.py wait_for_window() INFO: Waiting for window with title matching: .*Tradeview.*. 05.30.24 13:26:33
__main__.py wait_for_window() INFO: Window found and ready. 05.30.24 13:26:33
__main__.py is_strategy_tester_open() INFO: Checking if the Strategy Tester is open... 05.30.24 13:26:33
__main__.py is_strategy_tester_open() INFO: Strategy Tester is open. 05.30.24 13:26:33
__main__.py read_excel_to_dict() INFO: Attempting to load the workbook from D:\Strategy Tester Settings.xlsx 05.30.24 13:26:33
__main__.py read_excel_to_dict() INFO: Successfully read the Excel file and converted it to a list of dictionaries 05.30.24 13:26:33
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 13:26:33
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 13:26:34
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 13:26:34
__main__.py choose_EA() INFO: Navigating through options to find 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' 05.30.24 13:26:35
__main__.py choose_EA() INFO: Found 'Nadaraya-Watson\Nadaraya-Watson Netting.ex4' in the options. 05.30.24 13:26:37
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 13:26:37
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'BTCUSD, Bitcoin vs US Dollar CFD', ComboBox 05.30.24 13:26:37
__main__.py choose_symbol() INFO: Found and selected EURUSD in the dropdown. 05.30.24 13:26:37
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 13:26:37
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.30.24 13:26:37
__main__.py choose_period() INFO: M1 has already been selected. 05.30.24 13:26:37
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 13:26:37
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 13:26:38
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 13:26:38
__main__.py choose_EA() INFO: Navigating through options to find 'martingale_bb_third.ex4' 05.30.24 13:26:38
__main__.py choose_EA() INFO: Found 'martingale_bb_third.ex4' in the options. 05.30.24 13:26:40
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 13:26:40
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'EURUSD, Euro vs US Dollar', ComboBox 05.30.24 13:26:40
__main__.py choose_symbol() INFO: Found and selected GBPJPY in the dropdown. 05.30.24 13:26:41
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 13:26:41
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'M1', ComboBox 05.30.24 13:26:41
__main__.py choose_period() INFO: Found and selected H4 in the dropdown. 05.30.24 13:26:41
__main__.py select_expert_advisor() INFO: Checking for 'Indicator' combo box... 05.30.24 13:26:41
__main__.py select_expert_advisor() ERROR: It is likely that "Expert Advisor" has already been chosen 05.30.24 13:26:42
__main__.py choose_EA() INFO: Searching for the Expert input in the Strategy Tester 05.30.24 13:26:42
__main__.py choose_EA() INFO: Navigating through options to find 'Fib retracement\ao_swing_fib_ret_bo.ex4' 05.30.24 13:26:42
__main__.py choose_EA() INFO: Found 'Fib retracement\ao_swing_fib_ret_bo.ex4' in the options. 05.30.24 13:26:48
__main__.py choose_symbol() INFO: Searching for the Symbol input in the Strategy Tester 05.30.24 13:26:48
__main__.py choose_symbol() INFO: Found symbol input: win32_controls.ComboBoxWrapper - 'GBPJPY, British Pound vs Japanese Yen', ComboBox 05.30.24 13:26:48
__main__.py choose_symbol() INFO: Found and selected BTCUSD in the dropdown. 05.30.24 13:26:49
__main__.py choose_period() INFO: Searching for the Period input in the Strategy Tester 05.30.24 13:26:49
__main__.py choose_period() INFO: Found Period input: win32_controls.ComboBoxWrapper - 'H4', ComboBox 05.30.24 13:26:49
__main__.py choose_period() INFO: Found and selected M5 in the dropdown. 05.30.24 13:26:49
